#N struct 2955-cell float x float y float cellsize float color;
#N canvas 126 195 950 474 12;
#X declare -lib else;
#X declare -path abl_link~;
#X declare -path rjlib/rj;
#X declare -path rjlib/pd;
#X declare -path abs;
#X declare -path data;
#X obj 13 61 abs/drumpad-gui 1;
#N canvas 0 22 450 300 CPUmeter 0;
#X floatatom 316 233 0 0 0 0 - - -;
#X obj 316 145 cputime;
#X obj 316 25 loadbang;
#X obj 316 89 metro 1000;
#X obj 316 117 t b b;
#X obj 316 205 * 0.1;
#X obj 316 174 int;
#X text 293 274 CPU load in percent;
#X text 339 55 <= on/off;
#X obj 316 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 100 100 cnv 15 85 30 empty \$0-cpu_meter CPU\ 27% 6 15 0 18
-66577 -228856 0;
#X obj 127 248 s \$0-cpu_meter;
#X msg 127 222 label \$1;
#X obj 127 199 makefilename CPU\ %d%%;
#X msg 44 172 symbol CPU_90%;
#X connect 0 0 13 0;
#X connect 1 0 6 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 1 1;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 9 0 3 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X coords 0 -1 1 1 85 30 2 100 100;
#X restore 11 18 pd CPUmeter;
#X obj 187 61 bng 25 250 50 0 \$0-prepare_rec_send \$0-prepare_rec_receive
Set REC 28 10 0 16 -258113 -1 -1;
#X obj 187 92 bng 25 250 50 0 \$0-set_playback_send \$0-set_playback_receive
Set PLAY 28 10 0 16 -4034 -1 -1;
#X obj 267 235 out~;
#X text 26 403 Depois clicar no drumpad para gravar/tocar;
#X obj 760 18 dsp;
#X text 26 377 Primeiro escolher se gravar ou tocar nos bangs vermelho
e verde, f 64;
#X obj 285 213 else/initmess set 0.85;
#X text 38 421 Enquanto segurar o botão do mouse apertado no pad o
sampler grava \, ao soltar o pad interrompe a gravação, f 52;
#N canvas 495 275 242 172 volume_metronomo 0;
#X obj 10 84 sendOSC bpm volume;
#X obj 13 10 hsl 128 30 0 1 0 0 empty volume_metronomo_receive volume_metronomo
10 16 0 12 -66577 -191407 -228856 9100 1;
#X connect 1 0 0 0;
#X coords 0 -1 1 1 134 30 2 10 10;
#X restore 394 18 pd volume_metronomo;
#N canvas 976 181 223 141 dependências 0;
#X obj 10 10 button 86 22 255 255 255 128 128 159;
#X obj 10 37 sel 1;
#X obj 11 11 cnv 15 84 20 empty empty DEPENDÊNCIAS 7 10 0 10 -66577
-228856 0;
#N canvas 651 107 259 249 sobre\ dependências 0;
#X obj 4 4 cnv 15 250 240 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 11 151 declare -lib else;
#X obj 13 13 note 425 13 helvetica empty 0 22 22 22 0 255 255 255 0
0 Depende das bibliotecas:;
#N canvas 427 299 450 300 instalar_externals 0;
#X obj 10 10 bng 45 250 50 0 empty empty empty 17 7 0 10 -99865 -228856
-228856;
#X msg 10 60 browse https://gpi-nusom.gitbook.io/documentacao/atividades/tutoriais/pure-data/instalar-externals-no-pd
;
#X obj 10 112 pdcontrol;
#X text 75 26 Site com instruções para como instalar externals;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 45 45 2 10 10;
#X restore 41 77 pd instalar_externals;
#X obj 90 85 note 425 13 helvetica empty 0 22 22 22 0 255 255 255 0
0 <-- como instalar;
#X obj 137 100 note 425 13 helvetica empty 0 22 22 22 0 255 255 255
0 0 externals;
#X obj 23 33 note 425 13 helvetica empty 0 22 22 22 0 255 255 255 0
0 - ELSE \; - abl-link~;
#X obj 11 173 declare -path abl_link~;
#X obj 11 195 declare -path rjlib/rj;
#X obj 11 217 declare -path rjlib/pd;
#X restore 10 109 pd sobre\ dependências;
#X msg 10 61 \; pd-sobre\ dependências vis 1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X coords 0 -1 1 1 86 22 2 10 10;
#X restore 816 18 pd dependências;
#N canvas 170 93 594 300 debugs_gerais 0;
#X obj 62 54 receiveOSC;
#X obj 143 44 tgl 30 0 debugGeral empty debugGeral 17 7 0 10 -262130
-1 -1 0 1;
#X obj 62 81 spigot 0, f 14;
#X obj 35 198 bng 30 250 50 0 empty empty Separador_p/Debug 35 7 0
10 -262130 -1 -1;
#X msg 35 233 ---+_+_++___________++_+_+-----;
#X obj 205 148 key;
#X obj 205 172 display;
#X obj 203 201 sel 8706;
#X text 265 203 alt d;
#X obj 62 105 print debug_main;
#N canvas 544 41 504 314 drumpad_debug 0;
#X floatatom 17 25 5 0 0 0 - - -;
#X obj 224 23 receiveOSC;
#X obj 224 162 print;
#X obj 224 54 route drumpad;
#X obj 224 77 route 1;
#X obj 17 243 sendOSC drumpad 1 in pad;
#X obj 224 98 route out;
#X text 293 115 roteamento de mensagens de saída do drumpad 1, f
23;
#X obj 269 122 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 224 139 spigot 0;
#X msg 55 42 all color fg yellow;
#X msg 65 62 all color fg blue;
#X msg 75 82 all color fg green;
#X msg 85 102 all color fg red;
#X msg 118 161 0 state 1;
#X msg 128 179 0 state 0;
#X msg 95 121 all color bg grey;
#X msg 148 217 0 blink 0;
#X msg 138 197 0 blink 1 600;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 6 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 2 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 5 0;
#X connect 13 0 5 0;
#X connect 14 0 5 0;
#X connect 15 0 5 0;
#X connect 16 0 5 0;
#X connect 17 0 5 0;
#X connect 18 0 5 0;
#X restore 444 144 pd drumpad_debug;
#X obj 36 257 print -n;
#X floatatom 332 178 5 0 0 0 - - -;
#X msg 332 201 \$1 show;
#X obj 332 227 sendOSC drumpad in buffer in;
#X floatatom 397 175 6 0 0 0 - - -;
#X msg 397 201 all ms \$1;
#N canvas 19 40 193 220 EFEITOS 0;
#N canvas 512 215 450 242 LFO 0;
#N canvas 406 299 568 227 LFO_messages 0;
#X text 70 42 float;
#X text 111 42 - frequency in hertz up to 100 (negative values accepted)
;
#X text 52 59 anything;
#X text 111 59 -;
#X text 123 59 sets waveform (sine \, tri \, saw \, vsaw and square)
;
#X text 113 96 - sets waveform to sine (default), f 60;
#X text 113 112 - sets waveform to triangular, f 60;
#X text 113 128 - sets waveform to sawtooth, f 60;
#X text 7 10 INPUT MESSAGES;
#X text 70 96 sine;
#X text 76 112 tri;
#X text 76 128 saw;
#X text 10 144 square <float>;
#X text 22 160 vsaw <float>;
#X text 113 160 - sets waveform to variable sawtooth and width (from
-1 to 1), f 61;
#X text 126 176 (default 1), f 61;
#X text 113 144 - sets waveform to square and width (from 0 to 1) (default
0.5), f 63;
#X msg 127 7 processor n LFO <<control_message>>;
#X restore 38 30 pd LFO_messages;
#X obj 333 66 r \$0-LFO;
#X obj 86 162 sendOSC processor 1 LFO;
#X floatatom 86 72 5 0 20 1 Frequency - -;
#X msg 108 104 sine;
#X msg 148 104 tri;
#X msg 188 104 saw;
#X msg 223 104 square;
#X floatatom 333 90 9 0 0 0 - - -;
#X obj 333 114 vsl 22 60 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 1051 1;
#X connect 1 0 8 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 9 0;
#X restore 26 19 pd LFO;
#N canvas 758 209 359 280 Vibrato 0;
#N canvas 454 177 450 186 vibrato_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X text 112 105 interval in semitons (default 0);
#X msg 35 21 processor <n> effect vibrato <rate> <depth> <dry-wet>
;
#X restore 22 22 pd vibrato_messages;
#X obj 53 207 sendOSC processor 1 effect vibrato;
#X obj 53 181 pack f f f;
#X floatatom 53 101 7 0 0 2 frequency - -;
#X floatatom 143 101 5 0 0 2 depth_semitons - -;
#X obj 143 124 t b f;
#X floatatom 263 101 5 0 100 2 dry-wet - -;
#X obj 263 124 t b f;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 5 1 2 1;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 7 1 2 2;
#X restore 27 49 pd Vibrato;
#N canvas 750 67 412 280 Tremolo 0;
#X obj 53 181 pack f f f;
#X floatatom 53 101 7 0 0 2 frequency - -;
#X floatatom 143 101 5 0 1 2 depth - -;
#X obj 143 124 t b f;
#X floatatom 263 101 5 0 100 2 dry-wet - -;
#X obj 263 124 t b f;
#N canvas 454 177 450 186 tremolo_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X msg 35 21 processor n effect tremolo <rate> <depth> <dry-wet>;
#X text 112 105 tremolo depth (from 0 to 1);
#X restore 22 22 pd tremolo_messages;
#X obj 53 207 sendOSC processor 1 effect tremolo;
#X text 180 101 (0-1);
#X text 303 102 (0-100);
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 1 0 1;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 1 0 2;
#X restore 27 80 pd Tremolo;
#N canvas 750 67 412 240 Pitch-Shift 0;
#X floatatom 35 83 7 0 0 2 transposition - -;
#X floatatom 275 83 9 0 0 2 grain_size - -;
#X floatatom 165 83 5 0 100 2 dry-wet - -;
#X obj 165 106 t b f;
#X text 203 83 (0-100);
#X text 340 82 (ms);
#N canvas 438 370 569 195 pitch-shift_messages 0;
#X text 136 84 <n> -;
#X text 176 84 float \, processor id;
#X text 94 124 <dry-wet> -;
#X text 175 124 dry/wet signal rate (0-100);
#X text 52 104 <transposition> -;
#X text 73 144 <grain-size> -;
#X text 176 143 grain size in ms (default 75 \, minimum 5), f 44;
#X text 176 104 transposition in semitons (default 0), f 44;
#X msg 35 45 processor n effect pitch-shift size <grain-size>, f 49
;
#X msg 35 21 processor n effect pitch-shift <transposition> <dry-wet>
;
#X restore 18 17 pd pitch-shift_messages;
#X obj 35 189 sendOSC processor 1 effect pitch-shift;
#X msg 275 106 size \$1;
#X obj 35 143 pack f f;
#X text 85 83 (semitons);
#X connect 0 0 9 0;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 3 1 9 1;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X restore 27 109 pd Pitch-Shift;
#N canvas 227 58 729 458 Patchbay 0;
#N canvas 1109 -505 540 275 patchbay_messages 0;
#X msg 21 15 processor 1 patchbay 1 pad <n> effect <<effect_name>>
state <0-1>, f 65;
#X text 113 63 <n> -;
#X text 29 83 <<effect_name>> -;
#X text 153 83 clean \, vibrato \, tremolo \, pitch_shift or cutoff
;
#X text 57 103 state <0-1> -;
#X text 153 103 if effect assignaled will be activated or deactivated
, f 41;
#X text 153 63 pad number or all;
#X msg 21 175 processor 1 patchbay 1 reset;
#X text 69 202 reset message disconnect all.;
#X restore 13 10 pd patchbay_messages;
#X obj 104 398 sendOSC processor 1 patchbay 1;
#X msg 29 56 reset;
#X obj 100 183 list prepend pad;
#X floatatom 122 58 5 0 15 1 pad - -;
#X msg 85 58 all;
#X obj 100 289 list append;
#X obj 226 183 list prepend effect;
#X obj 100 313 list trim;
#X msg 226 101 clean;
#X msg 305 101 vibrato;
#X msg 387 101 tremolo;
#X msg 478 101 pitch_shift;
#X msg 617 101 cutoff;
#X obj 226 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 226 76 t b f;
#X obj 305 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 305 76 t b f;
#X obj 387 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 387 76 t b f;
#X obj 478 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 478 76 t b f;
#X obj 617 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 617 76 t b f;
#X msg 419 222 state \$1;
#X obj 226 253 list append, f 28;
#X obj 263 308 list prepend set;
#X obj 263 332 list trim;
#X msg 263 356 pad all effect clean state 1;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 6 0 26 0;
#X connect 7 0 25 0;
#X connect 8 0 1 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 15 0 9 0;
#X connect 15 1 24 0;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X connect 17 1 24 0;
#X connect 18 0 19 0;
#X connect 19 0 11 0;
#X connect 19 1 24 0;
#X connect 20 0 21 0;
#X connect 21 0 12 0;
#X connect 21 1 24 0;
#X connect 22 0 23 0;
#X connect 23 0 13 0;
#X connect 23 1 24 0;
#X connect 24 0 25 1;
#X connect 25 0 6 1;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X restore 26 168 pd Patchbay;
#N canvas 663 226 412 257 Cutoff 0;
#X obj 66 171 pack f f f;
#X floatatom 66 91 7 0 0 2 frequency - -;
#X floatatom 156 91 5 0 15 2 resonance - -;
#X obj 156 114 t b f;
#X floatatom 276 91 5 0 100 2 dry-wet - -;
#X obj 276 114 t b f;
#X text 316 92 (0-100);
#N canvas 661 439 507 186 cutoff_messages 0;
#X text 102 65 <n> -;
#X text 142 65 float \, processor id;
#X text 60 125 <dry-wet> -;
#X text 142 125 dry/wet signal rate (0-100);
#X text 142 138 (default 100);
#X text 46 85 <frequency> -;
#X text 46 105 <resonance> -;
#X text 142 85 cut off frequency in hertz;
#X text 142 105 tremolo depth (from 0 to 15);
#X msg 35 21 processor <n> effect cutoff <frequency> <resonance> <dry-wet>
, f 62;
#X restore 19 15 pd cutoff_messages;
#X text 193 91 (0-15);
#X obj 66 197 sendOSC processor 1 effect cutoff;
#X obj 25 53 hsl 60 15 0.01 19000 1 0 empty empty empty -2 -8 0 10
-262144 -1 -1 0 1;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 1 0 1;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 1 0 2;
#X connect 10 0 1 0;
#X restore 27 138 pd Cutoff;
#X restore 368 39 pd EFEITOS;
#N canvas 0 22 748 300 drumpad_GUI 0;
#X obj 263 84 v \$0-pad_task;
#X obj 263 62 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 263 108 5 0 0 0 - - -;
#X msg 486 227 reset;
#X msg 20 76 busy_pads show;
#X msg 55 98 pads_hold_time show;
#X obj 370 81 array get \$0-busy_pads;
#X msg 370 55 \$1 1;
#X floatatom 370 29 5 0 0 0 pad_n. - -;
#X floatatom 370 105 5 0 0 0 - - -;
#X obj 370 126 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 538 55 \$1 1;
#X floatatom 538 29 5 0 0 0 pad_n. - -;
#X floatatom 538 105 5 0 0 0 - - -;
#X obj 538 126 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 538 81 array get \$0-pads_hold_time;
#X obj 20 151 sendOSC drumpad in;
#X obj 486 249 sendOSC drumpad in;
#X text 530 229 reset drumpad configuration;
#X msg 75 123 pads_recording show;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 17 0;
#X connect 4 0 16 0;
#X connect 5 0 16 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 11 0 15 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 15 0 13 0;
#X connect 19 0 16 0;
#X restore 330 144 pd drumpad_GUI;
#X text 286 39 PROCESSOR:;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 14 0;
#X restore 817 129 pd debugs_gerais;
#X obj 622 298 note 425 14 dejavu\ sans\ mono empty 0 0 0 0 0 255 255
255 0 0 ToDo:;
#X obj 13 346 note 425 16 dejavu\ sans\ mono empty 0 0 0 0 0 255 255
255 0 0 INSTRUÇÕES:;
#N canvas 168 414 646 185 internalAPI 0;
#N canvas 652 332 507 300 drumpad 0;
#N canvas 329 22 443 593 pads_messages 0;
#X msg 46 40 timer n;
#X text 110 41 n <0-1>;
#X text 122 66 0 -;
#X text 122 98 1 -;
#X msg 46 142 hold n;
#X text 105 143 n <0-1>;
#X text 122 167 0 -;
#X text 122 209 1 -;
#X msg 46 245 color <bg-fg> <color>;
#X text 86 269 <bg-fg> -;
#X text 86 300 <color> -;
#X msg 46 376 blink <0-1> <time_interval>;
#X text 122 406 0 -;
#X text 122 422 1 -;
#X text 20 446 <time_interval>;
#X text 122 516 0 -;
#X text 122 532 1 -;
#X msg 46 486 state <0-1>;
#X text 146 406 stop blink, f 29;
#X text 146 422 start blink, f 29;
#X text 136 446 - time interval of blinking, f 29;
#X text 146 516 pad deactivated, f 29;
#X text 146 532 pad activated, f 29;
#X text 146 64 deactivate return of time interval of mouse click on
click off, f 35;
#X text 146 98 activate return of time interval of mouse click on click
off, f 35;
#X text 146 209 act like toogle, f 23;
#X text 146 165 deactivate act like toogle (default), f 23;
#X text 155 270 change backgroud (bg) e foreground of pad, f 34;
#X text 155 301 seletc color:;
#X text 169 314 grey \, red \, green \, blue \, yellow \, lightRed
\, lightGreen \, lightBlue \, lightYellow, f 33;
#X restore 364 8 pd pads_messages;
#X msg 59 64 drumpad <n> out pad <n> <<message>>;
#X msg 59 154 drumpad <n> in pad <n> <<message>>;
#X text 27 192 Messages for [pd buffer];
#X text 74 268 - reset sampler information;
#X msg 173 297 reset;
#X text 74 368 - define behavior of pads (recorder-player), f 23;
#X msg 250 380 pads_task recorder;
#X msg 276 401 pads_task player;
#X obj 232 542 v \$0-pad_task;
#X obj 232 520 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 232 566 5 0 0 0 - - -;
#X text 120 522 1 - recorder;
#X text 120 539 2 - player;
#X text 74 498 - retrieve behavior of pads (recorder-player);
#X text 74 618 - store if pad is busy with recorded sample, f 29;
#X text 120 662 0 - free;
#X text 120 679 1 - used;
#X text 74 728 - show busy_pads array list, f 29;
#X msg 148 752 busy_pads show;
#X text 74 818 - retrieve pads busy status;
#X obj 187 892 array get \$0-busy_pads;
#X msg 187 866 \$1 1;
#X floatatom 187 840 5 0 0 0 pad_n. - -;
#X text 31 1708 comment;
#X floatatom 187 916 5 0 0 0 - - -;
#X obj 187 937 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 74 978 - store record time of pad, f 27;
#X msg 277 985 pads_hold_time <time> <pad>;
#X msg 118 1008 pads_hold_time 12000 15;
#X text 74 1078 - show pads_hold_time array list;
#X msg 148 1102 pads_hold_time show;
#X text 74 1178 - retrieve pads busy status;
#X msg 187 1226 \$1 1;
#X floatatom 187 1200 5 0 0 0 pad_n. - -;
#X floatatom 187 1276 5 0 0 0 - - -;
#X obj 187 1297 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 187 1252 array get \$0-pads_hold_time;
#X msg 38 231 drumpad in <<control_message>>;
#X obj 173 323 sendOSC drumpad in;
#X obj 185 431 sendOSC drumpad in;
#X obj 221 697 sendOSC drumpad in;
#X obj 128 779 sendOSC drumpad in;
#X obj 130 1035 sendOSC drumpad in;
#X obj 128 1129 sendOSC drumpad in;
#X text 28 30 Messages from [drumpad-gui];
#X text 28 120 Messages to [drumpad-gui];
#X msg 283 628 busy_pads <0-1> <pad>;
#X msg 221 661 busy_pads 1 15;
#X msg 325 661 busy_pads 0 15;
#X msg 177 1606 \$1 1;
#X floatatom 177 1580 5 0 0 0 pad_n. - -;
#X floatatom 177 1656 5 0 0 0 - - -;
#X obj 177 1677 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 177 1632 array get \$0-pads_recording;
#X text 90 1382 0 - free;
#X obj 191 1417 sendOSC drumpad in;
#X obj 128 1499 sendOSC drumpad in;
#X text 64 1558 - retrieve instant pads_recording status;
#X text 74 1448 - show pads_recording array list;
#X msg 148 1472 pads_recording show;
#X msg 283 1348 pads_recording <0-1> <pad>;
#X msg 191 1381 pads_recording 1 15;
#X msg 345 1381 pads_recording 0 15;
#X text 74 1338 - store if pad is being recording, f 24;
#X text 90 1399 1 - recording;
#X connect 5 0 39 0;
#X connect 7 0 40 0;
#X connect 8 0 40 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 19 0 42 0;
#X connect 21 0 25 0;
#X connect 22 0 21 0;
#X connect 23 0 22 0;
#X connect 25 0 26 0;
#X connect 29 0 43 0;
#X connect 31 0 44 0;
#X connect 33 0 37 0;
#X connect 34 0 33 0;
#X connect 35 0 36 0;
#X connect 37 0 35 0;
#X connect 48 0 41 0;
#X connect 49 0 41 0;
#X connect 50 0 54 0;
#X connect 51 0 50 0;
#X connect 52 0 53 0;
#X connect 54 0 52 0;
#X connect 60 0 57 0;
#X connect 62 0 56 0;
#X connect 63 0 56 0;
#X restore 366 56 pd drumpad;
#N canvas 611 74 503 494 recorder~ 0;
#N canvas 730 22 550 334 Control_Messages 0;
#X text 80 185 reset;
#X text 38 215 loop <float>;
#X text 127 155 - start point in ms (default 0), f 58;
#X text 32 155 start <float>;
#X text 44 170 end <float>;
#X text 92 108 rec;
#X text 127 108 - (re)starts recording, f 58;
#X text 86 139 stop;
#X text 127 139 - stops recording, f 58;
#X text 10 200 continue <float>;
#X text 127 123 - gate: non-zero starts recording \, 0 stops it, f
58;
#X text 127 170 - end point in ms (default array's initial size),
f 58;
#X text 13 48 <pad> - integer 0-15;
#X msg 12 11 <pad> <<control_message>>;
#X text 12 87 <<control_message>>;
#X text 56 123 rec 0-1;
#X text 127 185 - resets start/end from 0 to (current) array's size
, f 56;
#X text 127 200 - non-zero: continue recording from where it last stopped
;
#X text 127 215 - non-zero enables loop recording \, 0 disables it
, f 56;
#X text 69 62 all;
#X text 83 233 clear;
#X text 89 250 show;
#X text 89 266 hide;
#X text 128 250 - shows/opens buffer supbatch window, f 53;
#X text 128 266 - hides/closes buffer supbatch window, f 53;
#X text 11 281 normalize <float>;
#X text 128 233 - fills all buffer arrays with zeros, f 53;
#X text 128 282 - normalizes buffer content to the given float value
, f 53;
#X restore 351 8 pd Control_Messages;
#X msg 45 81 recorder <pad> out <<control_message>>;
#X text 34 52 Messages from [pd recorder~];
#X text 34 202 Messages for [pd recorder~];
#X text 81 113 - recording ended;
#X msg 111 138 recorder <pad> out endbang;
#X obj 205 296 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 113 290 - rec <0-1>;
#X text 81 268 - start/stop recording;
#X msg 45 241 drumpad in recorder <pad> <<control_message>>;
#X obj 205 313 sendOSC drumpad in recorder in 0 rec;
#X connect 6 0 10 0;
#X restore 32 53 pd recorder~;
#N canvas 717 219 515 404 player~ 0;
#X msg 35 197 player in <pad> <<control_message>>;
#X text 24 17 Messages from [pd player~];
#X text 24 167 Messages to [pd player~];
#X text 56 78 - reprodution finished;
#X msg 112 99 player <pad> out endbang;
#X obj 112 335 sendOSC player in;
#X msg 419 272 0 loop 0;
#X msg 353 272 0 loop 1;
#X msg 35 46 player <pad> out <<control_message>>;
#N canvas 105 394 568 344 Control_Messages 0;
#X text 87 111 float;
#X text 76 245 <stop>;
#X text 70 261 <pause>;
#X text 64 277 <resume>;
#X text 120 245 - stops playing and outputs 0 (cannot be resumed),
f 61;
#X text 125 111 - non zero plays the array in original speed \, <0>
stops it, f 61;
#X text 120 277 - resumes playing after being paused, f 61;
#X text 64 293 loop <f>;
#X text 120 293 - non zero enables looping \, <0> disbales it, f 61
;
#X text 120 261 - pauses at a particular point (can be resumed), f
61;
#X msg 9 7 <pad> <<control_message>>;
#X text 31 42 <pad> - integer 0-15;
#X text 29 82 <<control_message>>;
#X text 30 136 start <float>;
#X text 124 136 - sets start point in ms, f 61;
#X text 115 163 -;
#X text 23 163 play <f \, f \, f>;
#X text 127 163 start playing \, if no float is given \, array is played
from start to end. 1st float sets start \, 2nd sets end (in ms) and
3rd sets speed rate;
#X text 29 212 speed <float>;
#X text 115 212 - sets playing speed in percentage, f 61;
#X restore 361 11 pd Control_Messages;
#X text 44 248 Messages play <f f f> \, speed <f> and loop <0-1>;
#X msg 48 273 0 play 0 900 100;
#X msg 175 272 0 speed 50;
#X msg 261 272 0 speed 100;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 5 0;
#X connect 13 0 5 0;
#X restore 197 54 pd player~;
#N canvas 0 44 450 300 recording_control 0;
#N canvas 625 248 448 513 set_REC 0;
#X obj 34 449 sendOSC drumpad 1 in;
#X msg 210 173 pad all timer 1;
#X obj 34 293 output_active_pads;
#X obj 34 272 \$0;
#X msg 157 315 pad \$1 color bg grey;
#X obj 49 69 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 34 15 r \$0-prepare_rec_send;
#X text 80 37 bang from Set REC button;
#X msg 34 340 pad \$1 color bg lightRed;
#X msg 122 226 pad all color fg red;
#X msg 166 197 pad all hold 1;
#X msg 78 253 pads_task recorder;
#X obj 78 422 sendOSC drumpad in;
#X obj 47 223 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 34 89 t b b b b b b, f 32;
#X msg 255 146 pad all alias_state 0;
#X connect 1 0 0 0;
#X connect 2 0 8 0;
#X connect 2 1 4 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 5 0 14 0;
#X connect 6 0 14 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 13 0 3 0;
#X connect 14 0 3 0;
#X connect 14 1 11 0;
#X connect 14 2 9 0;
#X connect 14 3 10 0;
#X connect 14 4 1 0;
#X connect 14 5 15 0;
#X connect 15 0 0 0;
#X restore 27 22 pd set_REC;
#N canvas 15 169 584 491 REC_from_drumpad 0;
#X text 11 5 Messages from [drumpad];
#N canvas 329 23 443 560 pads_messages 0;
#X msg 46 40 timer n;
#X text 110 41 n <0-1>;
#X text 122 66 0 -;
#X text 122 98 1 -;
#X msg 46 142 hold n;
#X text 105 143 n <0-1>;
#X text 122 167 0 -;
#X text 122 209 1 -;
#X msg 46 245 color <bg-fg> <color>;
#X text 86 269 <bg-fg> -;
#X text 86 300 <color> -;
#X text 169 314 red \, green \, blue \, yellow \, lightRed \, lightGreen
\, lightBlue \, lightYellow, f 35;
#X msg 46 356 blink <0-1> <time_interval>;
#X text 122 386 0 -;
#X text 122 402 1 -;
#X text 20 426 <time_interval>;
#X text 122 496 0 -;
#X text 122 512 1 -;
#X msg 46 466 state <0-1>;
#X text 146 386 stop blink, f 29;
#X text 146 402 start blink, f 29;
#X text 136 426 - time interval of blinking, f 29;
#X text 146 496 pad deactivated, f 29;
#X text 146 512 pad activated, f 29;
#X text 146 64 deactivate return of time interval of mouse click on
click off, f 35;
#X text 146 98 activate return of time interval of mouse click on click
off, f 35;
#X text 146 209 act like toogle, f 23;
#X text 146 165 deactivate act like toogle (default), f 23;
#X text 155 270 change backgroud (bg) e foreground of pad, f 34;
#X text 155 301 seletc color:;
#X restore 443 17 pd pads_messages;
#X msg 31 27 drumpad <n> out pad <n> <<message>>;
#X obj 74 73 receiveOSC;
#X obj 94 157 route drumpad;
#X obj 94 206 route out;
#X obj 94 181 route 1;
#X obj 94 230 route pad;
#X obj 94 261 t a a a, f 44;
#X obj 94 443 sendOSC;
#N canvas 68 110 1148 475 set_pad_color 0;
#X obj 21 16 inlet;
#X obj 404 429 outlet;
#X obj 21 82 list split 1;
#X obj 61 126 route state;
#X obj 61 104 list trim;
#X obj 21 350 spigot 0, f 15;
#X obj 788 85 list split 1;
#X obj 828 129 route state;
#X obj 828 107 list trim;
#X obj 788 350 spigot 0, f 15;
#X obj 61 150 == 0;
#X obj 828 157 == 1;
#X msg 21 258 drumpad 1 in pad \$1 blink 0;
#X obj 21 197 t f f;
#X obj 21 58 t a a, f 110;
#X obj 322 84 receiveOSC;
#N canvas 388 126 383 465 set_after_recorder_endbang 0;
#X obj 38 27 inlet;
#X obj 78 412 outlet;
#X obj 118 197 route out;
#X obj 118 223 route endbang;
#X obj 78 150 list split 1;
#X obj 118 174 list trim;
#X obj 118 260 del 10;
#X obj 78 76 route recorder;
#X obj 78 296 f;
#N canvas 680 225 450 300 gate_pad_recording 0;
#X msg 200 112 \$1 1;
#X obj 200 138 array get \$0-pads_recording;
#X obj 77 16 inlet;
#X obj 77 253 outlet;
#X obj 77 60 t a a, f 18;
#X obj 77 194 spigot 0;
#X obj 200 84 list split 1;
#X connect 0 0 1 0;
#X connect 1 0 5 1;
#X connect 2 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X restore 78 102 pd gate_pad_recording;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 8 1;
#X connect 4 1 5 0;
#X connect 5 0 2 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 1 0;
#X connect 9 0 4 0;
#X restore 327 111 pd set_after_recorder_endbang;
#X msg 348 196 drumpad 1 in pad \$1 blink 0;
#X msg 788 230 drumpad 1 in pad \$1 blink 1 300;
#X msg 53 228 drumpad 1 in pad \$1 color bg lightRed;
#X msg 820 206 drumpad 1 in pad \$1 color bg lightRed;
#X obj 788 178 t f f;
#X connect 0 0 14 0;
#X connect 2 0 13 0;
#X connect 2 1 4 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X connect 6 0 21 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 1;
#X connect 11 0 9 1;
#X connect 12 0 5 0;
#X connect 13 0 12 0;
#X connect 13 1 19 0;
#X connect 14 0 2 0;
#X connect 14 1 6 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 1 0;
#X connect 18 0 9 0;
#X connect 19 0 5 0;
#X connect 20 0 9 0;
#X connect 21 0 18 0;
#X connect 21 1 20 0;
#X restore 94 313 pd set_pad_color;
#N canvas 347 257 811 313 rec_command 0;
#X obj 34 19 inlet;
#X obj 57 256 outlet;
#X obj 57 62 list split 1;
#X obj 97 106 route state;
#X obj 97 84 list trim;
#X obj 57 133 pack f f;
#X msg 57 197 drumpad in recorder in \$1 rec \$2;
#X obj 322 84 receiveOSC;
#N canvas 621 165 337 465 set_after_recorder_endbang 0;
#X obj 38 27 inlet;
#X obj 118 197 route out;
#X obj 118 223 route endbang;
#X obj 78 150 list split 1;
#X obj 118 174 list trim;
#X obj 118 260 del 10;
#X obj 78 412 outlet;
#X obj 78 76 route recorder;
#X obj 78 296 f;
#N canvas 680 225 450 300 gate_pad_recording 0;
#X msg 200 112 \$1 1;
#X obj 200 138 array get \$0-pads_recording;
#X obj 77 16 inlet;
#X obj 77 253 outlet;
#X obj 77 60 t a a, f 18;
#X obj 77 194 spigot 0;
#X obj 200 84 list split 1;
#X connect 0 0 1 0;
#X connect 1 0 5 1;
#X connect 2 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X restore 78 102 pd gate_pad_recording;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 8 1;
#X connect 3 1 4 0;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 6 0;
#X connect 9 0 3 0;
#X restore 327 111 pd set_after_recorder_endbang;
#X msg 327 196 drumpad 1 in pad \$1 state 0;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 2 1 4 0;
#X connect 3 0 5 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 1 0;
#X restore 246 313 pd rec_command;
#N canvas 190 184 767 461 set_pads_status 0;
#X obj 26 18 inlet;
#X obj 26 409 outlet;
#X obj 26 96 list split 1;
#X obj 66 140 route timer;
#X obj 66 118 list trim;
#X obj 26 215 pack f f, f 14;
#X obj 26 193 f;
#X obj 66 164 t b f;
#X obj 26 244 t a a, f 34;
#X msg 26 309 drumpad in pads_hold_time \$2 \$1;
#X msg 261 309 drumpad in busy_pads 1 \$1;
#X obj 26 64 t a a, f 68;
#X obj 499 98 list split 1;
#X obj 539 130 list trim;
#X obj 539 152 route state;
#X obj 499 262 pack f f, f 11;
#X obj 539 194 t b f;
#X obj 499 235 f;
#X msg 499 304 drumpad in pads_recording \$2 \$1;
#X connect 0 0 11 0;
#X connect 2 0 6 1;
#X connect 2 1 4 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X connect 7 0 6 0;
#X connect 7 1 5 1;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X connect 9 0 1 0;
#X connect 10 0 1 0;
#X connect 11 0 2 0;
#X connect 11 1 12 0;
#X connect 12 0 17 1;
#X connect 12 1 13 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 16 1 15 1;
#X connect 17 0 15 0;
#X connect 18 0 1 0;
#X restore 399 313 pd set_pads_status;
#N canvas 0 22 244 300 gate_recorder_pads_task 0;
#X obj 37 37 inlet;
#X obj 37 221 outlet;
#X obj 90 112 v \$0-pad_task;
#X obj 37 81 t a b, f 8;
#X obj 37 155 spigot 0;
#X obj 90 134 == 1;
#X text 142 134 1 - recorder;
#X text 142 154 2 - player;
#X connect 0 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X restore 74 117 pd gate_recorder_pads_task;
#X connect 3 0 13 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 8 1 11 0;
#X connect 8 2 12 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 4 0;
#X restore 27 56 pd REC_from_drumpad;
#X restore 32 31 pd recording_control;
#N canvas 9 44 450 300 playback_control 0;
#N canvas 481 113 541 621 set_PLAY 0;
#X obj 291 548 sendOSC drumpad 1 in;
#X msg 89 236 pad all color fg green;
#X msg 115 201 pad all hold 1;
#X msg 141 175 pad all timer 0;
#X msg 38 396 pad \$1 color bg lightGreen;
#X obj 38 352 \$0;
#X msg 161 422 pad \$1 color bg grey;
#X obj 38 21 r \$0-set_playback_send;
#X text 99 42 bang from Set PLAY button;
#X obj 50 93 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 63 263 pads_task player;
#X obj 63 548 sendOSC drumpad in;
#X obj 38 373 output_active_pads;
#X obj 37 115 t b b b b b b, f 19;
#X msg 167 142 pad all alias_state 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 12 0;
#X connect 6 0 0 0;
#X connect 7 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 11 0;
#X connect 12 0 4 0;
#X connect 12 1 6 0;
#X connect 13 0 5 0;
#X connect 13 1 10 0;
#X connect 13 2 1 0;
#X connect 13 3 2 0;
#X connect 13 4 3 0;
#X connect 13 5 14 0;
#X connect 14 0 0 0;
#X restore 19 27 pd set_PLAY;
#N canvas 40 122 513 491 PLAY_from_drumpad 0;
#X text 11 5 Messages from [drumpad];
#N canvas 747 56 443 560 pads_messages 0;
#X msg 46 40 timer n;
#X text 110 41 n <0-1>;
#X text 122 66 0 -;
#X text 122 98 1 -;
#X msg 46 142 hold n;
#X text 105 143 n <0-1>;
#X text 122 167 0 -;
#X text 122 209 1 -;
#X msg 46 245 color <bg-fg> <color>;
#X text 86 269 <bg-fg> -;
#X text 86 300 <color> -;
#X text 169 314 red \, green \, blue \, yellow \, lightRed \, lightGreen
\, lightBlue \, lightYellow, f 35;
#X msg 46 356 blink <0-1> <time_interval>;
#X text 122 386 0 -;
#X text 122 402 1 -;
#X text 20 426 <time_interval>;
#X text 122 496 0 -;
#X text 122 512 1 -;
#X msg 46 466 state <0-1>;
#X text 146 386 stop blink, f 29;
#X text 146 402 start blink, f 29;
#X text 136 426 - time interval of blinking, f 29;
#X text 146 496 pad deactivated, f 29;
#X text 146 512 pad activated, f 29;
#X text 146 64 deactivate return of time interval of mouse click on
click off, f 35;
#X text 146 98 activate return of time interval of mouse click on click
off, f 35;
#X text 146 209 act like toogle, f 23;
#X text 146 165 deactivate act like toogle (default), f 23;
#X text 155 270 change backgroud (bg) e foreground of pad, f 34;
#X text 155 301 seletc color:;
#X restore 360 19 pd pads_messages;
#X msg 31 27 drumpad <n> out pad <n> <<message>>;
#X obj 74 73 receiveOSC;
#X obj 94 157 route drumpad;
#X obj 94 206 route out;
#X obj 94 181 route 1;
#X obj 94 230 route pad;
#X obj 94 443 sendOSC;
#N canvas 54 119 1158 471 set_pad_color 0;
#X obj 20 16 inlet;
#X obj 431 426 outlet;
#X obj 20 82 list split 1;
#X obj 60 126 route state;
#X obj 60 104 list trim;
#X obj 20 197 list prepend drumpad 1 in pad;
#X obj 20 305 list trim;
#X obj 20 350 spigot 0, f 15;
#X obj 794 85 list split 1;
#X obj 834 129 route state;
#X obj 834 107 list trim;
#X obj 794 200 list prepend drumpad 1 in pad;
#X obj 794 308 list trim;
#X obj 794 350 spigot 0, f 15;
#X obj 60 150 == 0;
#X obj 834 157 == 1;
#X obj 794 224 t a a, f 24;
#X obj 20 224 t a a, f 20;
#X obj 20 254 list append blink 0;
#X obj 794 254 list append blink 0;
#X obj 959 254 list append color bg green;
#X obj 164 254 list append color bg lightGreen;
#X obj 455 233 receiveOSC;
#N canvas 562 102 510 523 set_after_player_endbang 0;
#X obj 38 27 inlet;
#X obj 78 96 route player;
#X obj 118 167 route out;
#X obj 118 191 route endbang;
#X obj 78 120 list split 1;
#X obj 118 144 list trim;
#X obj 118 215 del 10;
#X obj 78 280 list prepend set drumpad 1 in pad;
#X obj 78 304 list append color bg lightGreen;
#X msg 78 368 drumpad 1 in pad 15 color bg lightGreen;
#X obj 78 327 list trim;
#X obj 78 442 outlet;
#X obj 78 73 t a a, f 19;
#X obj 241 220 == 0;
#X obj 118 239 spigot 1;
#N canvas 387 212 247 353 loop_toogle_state 0;
#X obj 34 19 inlet;
#X obj 67 261 outlet;
#X obj 67 73 route drumpad;
#X obj 67 97 route in;
#X obj 67 121 route player;
#X obj 67 145 route in;
#X obj 67 169 route all;
#X obj 67 193 route loop;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X restore 241 183 pd loop_toogle_state;
#X connect 0 0 12 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 2 0;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 12 0 1 0;
#X connect 12 1 15 0;
#X connect 13 0 14 1;
#X connect 14 0 9 0;
#X connect 15 0 13 0;
#X restore 460 260 pd set_after_player_endbang;
#X obj 20 58 t a a a, f 111;
#X obj 407 82 list split 1;
#X msg 407 196 set drumpad 1 in pad \$1 state 0;
#X msg 407 330 drumpad 1 in pad 0 state 0;
#X obj 460 284 t b a;
#X connect 0 0 24 0;
#X connect 2 0 5 0;
#X connect 2 1 4 0;
#X connect 3 0 14 0;
#X connect 4 0 3 0;
#X connect 5 0 17 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X connect 8 0 11 0;
#X connect 8 1 10 0;
#X connect 9 0 15 0;
#X connect 10 0 9 0;
#X connect 11 0 16 0;
#X connect 12 0 13 0;
#X connect 13 0 1 0;
#X connect 14 0 7 1;
#X connect 15 0 13 1;
#X connect 16 0 19 0;
#X connect 16 1 20 0;
#X connect 17 0 18 0;
#X connect 17 1 21 0;
#X connect 18 0 6 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 21 0 6 0;
#X connect 22 0 23 0;
#X connect 23 0 28 0;
#X connect 24 0 2 0;
#X connect 24 1 25 0;
#X connect 24 2 8 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 1 0;
#X connect 28 0 27 0;
#X connect 28 1 1 0;
#X restore 94 313 pd set_pad_color;
#N canvas 0 23 244 300 gate_player_pads_task 0;
#X obj 37 37 inlet;
#X obj 37 221 outlet;
#X obj 90 112 v \$0-pad_task;
#X obj 37 81 t a b, f 8;
#X obj 37 155 spigot 0;
#X text 142 134 1 - recorder;
#X text 142 154 2 - player;
#X obj 90 134 == 2;
#X connect 0 0 3 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 7 0 4 1;
#X restore 74 117 pd gate_player_pads_task;
#N canvas 177 37 625 635 play_command 0;
#X obj 34 19 inlet;
#X obj 45 566 outlet;
#X obj 45 92 list split 1;
#X obj 98 140 route state;
#X obj 98 118 list trim;
#X msg 133 240 \$1 1;
#X obj 133 266 array get \$0-pads_hold_time;
#X obj 45 216 t f f, f 12;
#X obj 45 374 list append, f 13;
#X obj 45 350 list prepend drumpad in player in;
#X obj 45 398 list trim;
#X obj 45 462 spigot 0;
#X obj 98 440 == 1;
#X obj 45 62 t a a, f 49;
#X obj 385 92 list split 1;
#X obj 438 140 route state;
#X obj 438 118 list trim;
#X obj 385 462 spigot 0;
#X obj 438 437 == 0;
#X msg 385 256 drumpad in player in \$1 stop;
#X obj 133 290 list prepend play 0;
#X obj 133 317 list append 100;
#X text 245 320 speed;
#X connect 0 0 13 0;
#X connect 2 0 7 0;
#X connect 2 1 4 0;
#X connect 3 0 12 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 20 0;
#X connect 7 0 9 0;
#X connect 7 1 5 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 1 0;
#X connect 12 0 11 1;
#X connect 13 0 2 0;
#X connect 13 1 14 0;
#X connect 14 0 19 0;
#X connect 14 1 16 0;
#X connect 15 0 18 0;
#X connect 16 0 15 0;
#X connect 17 0 1 0;
#X connect 18 0 17 1;
#X connect 19 0 17 0;
#X connect 20 0 21 0;
#X connect 21 0 8 1;
#X restore 245 313 pd play_command;
#X obj 94 261 t a a, f 22;
#X connect 3 0 10 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 4 0;
#X connect 11 0 8 0;
#X connect 12 0 9 0;
#X connect 12 1 11 0;
#X restore 19 57 pd PLAY_from_drumpad;
#N canvas 80 196 450 262 loopPLAY 0;
#N canvas 606 42 568 243 Control_Messages 0;
#X text 87 111 float;
#X text 81 157 <stop>;
#X text 75 173 <pause>;
#X text 69 189 <resume>;
#X text 125 157 - stops playing and outputs 0 (cannot be resumed),
f 61;
#X text 125 111 - non zero plays the array in original speed \, <0>
stops it, f 61;
#X text 125 189 - resumes playing after being paused, f 61;
#X text 69 205 loop <f>;
#X text 125 205 - non zero enables looping \, <0> disbales it, f 61
;
#X text 125 128 -;
#X text 125 173 - pauses at a particular point (can be resumed), f
61;
#X text 45 128 start <f \, f>;
#X text 137 128 start playing \, if no float is given \, array is played
from start to end. 1st float sets start and 2nd sets end (in ms);
#X msg 9 7 <pad> <<control_message>>;
#X text 31 42 <pad> - integer 0-15;
#X text 29 82 <<control_message>>;
#X restore 289 222 pd Control_Messages;
#X obj 61 59 r \$0_loopToggle_send;
#X text 207 60 yellow Loop toogle;
#X msg 101 113 all loop \$1;
#X msg 10 9 drumpad in player in <pad> <<control_message>>;
#X obj 101 187 sendOSC drumpad in player in;
#X connect 1 0 3 0;
#X connect 3 0 5 0;
#X restore 19 90 pd loopPLAY;
#X restore 197 31 pd playback_control;
#N canvas 691 287 450 300 synthesis_control 0;
#X restore 474 29 pd synthesis_control;
#N canvas 8 35 473 731 buffer 0;
#N canvas 675 84 550 240 Control_Messages 0;
#X text 43 48 <pad> - integer 0-15;
#X msg 12 11 <pad> <<control_message>>;
#X text 42 87 <<control_message>>;
#X text 99 62 all;
#X text 112 108 clear;
#X text 119 125 show;
#X text 119 141 hide;
#X text 158 125 - shows/opens buffer supbatch window, f 53;
#X text 158 141 - hides/closes buffer supbatch window, f 53;
#X text 28 156 normalize <float>;
#X text 158 108 - fills all buffer arrays with zeros, f 53;
#X text 158 157 - normalizes buffer content to the given float value
, f 53;
#X text 77 176 ms <float>;
#X text 63 196 size <float>;
#X text 158 197 - sets maximum buffer size in samples, f 53;
#X text 158 177 - sets maximum buffer size in ms, f 53;
#X restore 327 8 pd Control_Messages;
#X floatatom 195 139 5 0 0 0 - - -;
#X msg 195 162 \$1 show;
#X text 100 131 - <pad> show;
#X floatatom 195 219 5 0 0 0 - - -;
#X text 100 211 - <pad> hide;
#X text 100 324 - <pad> clear;
#X msg 199 331 all clear;
#X text 68 107 - show/hide pad buffer;
#X text 68 303 - clear pad buffer content;
#X text 68 403 - normalize buffer signal to given float number;
#X text 100 424 - <pad> normalize <float>;
#X floatatom 186 450 5 0 0 0 pad - -;
#X msg 229 448 \$1 normalize 0.92;
#X text 21 31 Messages for [pd buffer];
#X msg 32 70 buffer in <pad> <<control_message>>;
#X msg 195 242 \$1 hide;
#X floatatom 240 553 6 0 0 0 - - -;
#X floatatom 249 649 8 0 0 0 - - -;
#X msg 240 579 all ms \$1;
#X msg 249 675 all size \$1;
#X text 68 523 - set maximum record buffer time in miliseconds (ms)
;
#X text 100 544 - <pad> ms <float>;
#X text 68 623 - set maximum record buffer time in samples;
#X text 100 644 - <pad> size <float>;
#X obj 195 188 sendOSC drumpad in buffer in;
#X obj 195 268 sendOSC drumpad in buffer in;
#X obj 199 357 sendOSC drumpad in buffer in;
#X obj 229 474 sendOSC drumpad in buffer in;
#X obj 240 602 sendOSC drumpad in buffer in;
#X obj 249 697 sendOSC drumpad in buffer in;
#X connect 1 0 2 0;
#X connect 2 0 25 0;
#X connect 4 0 16 0;
#X connect 7 0 27 0;
#X connect 12 0 13 0;
#X connect 13 0 28 0;
#X connect 16 0 26 0;
#X connect 17 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 29 0;
#X connect 20 0 30 0;
#X restore 366 82 pd buffer;
#N canvas 588 30 535 729 sampler 0;
#X restore 366 29 pd sampler;
#N canvas 416 276 484 419 processor 0;
#X text 36 65 LFO;
#X text 38 110 EFFECTS;
#X text 23 17 Processor in drumpad;
#X text 59 163 Vibrato;
#N canvas 512 215 450 242 LFO 0;
#N canvas 406 299 568 227 LFO_messages 0;
#X text 70 42 float;
#X text 111 42 - frequency in hertz up to 100 (negative values accepted)
;
#X text 52 59 anything;
#X text 111 59 -;
#X text 123 59 sets waveform (sine \, tri \, saw \, vsaw and square)
;
#X text 113 96 - sets waveform to sine (default), f 60;
#X text 113 112 - sets waveform to triangular, f 60;
#X text 113 128 - sets waveform to sawtooth, f 60;
#X text 7 10 INPUT MESSAGES;
#X text 70 96 sine;
#X text 76 112 tri;
#X text 76 128 saw;
#X text 10 144 square <float>;
#X text 22 160 vsaw <float>;
#X text 113 160 - sets waveform to variable sawtooth and width (from
-1 to 1), f 61;
#X text 126 176 (default 1), f 61;
#X text 113 144 - sets waveform to square and width (from 0 to 1) (default
0.5), f 63;
#X msg 127 7 processor <n> LFO <<control_message>>;
#X restore 38 30 pd LFO_messages;
#X obj 333 66 r \$0-LFO;
#X obj 86 162 sendOSC processor 1 LFO;
#X floatatom 86 72 5 0 20 1 Frequency - -;
#X msg 108 104 sine;
#X msg 148 104 tri;
#X msg 188 104 saw;
#X msg 223 104 square;
#X floatatom 333 90 9 0 0 0 - - -;
#X obj 333 114 vsl 22 60 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 1051 1;
#X connect 1 0 8 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 9 0;
#X restore 77 65 pd LFO;
#N canvas 358 193 359 280 Vibrato 0;
#N canvas 454 177 450 186 vibrato_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X text 112 105 interval in semitons (default 0);
#X msg 35 21 processor <n> effect vibrato <rate> <depth> <dry-wet>
;
#X restore 22 22 pd vibrato_messages;
#X obj 53 207 sendOSC processor 1 effect vibrato;
#X obj 53 181 pack f f f;
#X floatatom 53 101 7 0 0 2 frequency - -;
#X floatatom 143 101 5 0 0 2 depth_semitons - -;
#X obj 143 124 t b f;
#X floatatom 263 101 5 0 100 2 dry-wet - -;
#X obj 263 124 t b f;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 5 1 2 1;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 7 1 2 2;
#X restore 122 163 pd Vibrato;
#X text 58 203 Tremolo;
#N canvas 750 67 412 280 Tremolo 0;
#X obj 53 181 pack f f f;
#X floatatom 53 101 7 0 0 2 frequency - -;
#X floatatom 143 101 5 0 1 2 depth - -;
#X obj 143 124 t b f;
#X floatatom 263 101 5 0 100 2 dry-wet - -;
#X obj 263 124 t b f;
#N canvas 454 177 450 186 tremolo_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X text 112 105 tremolo depth (from 0 to 1);
#X msg 35 21 processor <n> effect tremolo <rate> <depth> <dry-wet>
;
#X restore 22 22 pd tremolo_messages;
#X obj 53 207 sendOSC processor 1 effect tremolo;
#X text 180 101 (0-1);
#X text 303 102 (0-100);
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 1 0 1;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 1 0 2;
#X restore 122 203 pd Tremolo;
#X text 58 243 Pitch Shift;
#N canvas 750 67 412 240 Pitch-Shift 0;
#X floatatom 35 83 7 0 0 2 transposition - -;
#X floatatom 275 83 9 0 0 2 grain_size - -;
#X floatatom 165 83 5 0 100 2 dry-wet - -;
#X obj 165 106 t b f;
#X text 203 83 (0-100);
#X text 340 82 (ms);
#N canvas 438 370 569 195 pitch-shift_messages 0;
#X text 136 84 <n> -;
#X text 176 84 float \, processor id;
#X text 94 124 <dry-wet> -;
#X text 175 124 dry/wet signal rate (0-100);
#X text 52 104 <transposition> -;
#X text 73 144 <grain-size> -;
#X text 176 143 grain size in ms (default 75 \, minimum 5), f 44;
#X text 176 104 transposition in semitons (default 0), f 44;
#X msg 35 21 processor <n> effect pitch-shift <transposition> <dry-wet>
;
#X msg 35 45 processor <n> effect pitch-shift size <grain-size>;
#X restore 18 17 pd pitch-shift_messages;
#X obj 35 189 sendOSC processor 1 effect pitch-shift;
#X msg 275 106 size \$1;
#X obj 35 143 pack f f;
#X text 85 83 (semitons);
#X connect 0 0 9 0;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 3 1 9 1;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X restore 152 243 pd Pitch-Shift;
#X text 58 277 CutOff;
#N canvas 411 290 412 257 Cutoff 0;
#X obj 66 171 pack f f f;
#X floatatom 66 91 7 0 0 2 frequency - -;
#X floatatom 156 91 5 0 15 2 resonance - -;
#X obj 156 114 t b f;
#X floatatom 276 91 5 0 100 2 dry-wet - -;
#X obj 276 114 t b f;
#X text 316 92 (0-100);
#N canvas 661 439 507 186 cutoff_messages 0;
#X text 102 65 <n> -;
#X text 142 65 float \, processor id;
#X text 60 125 <dry-wet> -;
#X text 142 125 dry/wet signal rate (0-100);
#X text 142 138 (default 100);
#X text 46 85 <frequency> -;
#X text 46 105 <resonance> -;
#X text 142 85 cut off frequency in hertz;
#X text 142 105 tremolo depth (from 0 to 15);
#X msg 35 21 processor <n> effect cutoff <frequency> <resonance> <dry-wet>
, f 62;
#X restore 19 15 pd cutoff_messages;
#X text 193 91 (0-15);
#X obj 66 197 sendOSC processor 1 effect cutoff;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 1 0 1;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 1 0 2;
#X restore 122 277 pd Cutoff;
#X text 59 322 Patchbay;
#N canvas 397 -545 729 458 Patchbay 0;
#N canvas 1109 -505 540 275 patchbay_messages 0;
#X msg 21 15 processor 1 patchbay 1 pad <n> effect <<effect_name>>
state <0-1>, f 65;
#X text 113 63 <n> -;
#X text 29 83 <<effect_name>> -;
#X text 153 83 clean \, vibrato \, tremolo \, pitch_shift or cutoff
;
#X text 57 103 state <0-1> -;
#X text 153 103 if effect assignaled will be activated or deactivated
, f 41;
#X text 153 63 pad number or all;
#X msg 21 175 processor 1 patchbay 1 reset;
#X text 69 202 reset message disconnect all.;
#X restore 13 10 pd patchbay_messages;
#X obj 104 398 sendOSC processor 1 patchbay 1;
#X msg 29 56 reset;
#X obj 100 183 list prepend pad;
#X floatatom 122 58 5 0 15 1 pad - -;
#X msg 85 58 all;
#X obj 100 289 list append;
#X obj 226 183 list prepend effect;
#X obj 100 313 list trim;
#X msg 226 101 clean;
#X msg 305 101 vibrato;
#X msg 389 101 tremolo;
#X msg 478 101 pitch_shift;
#X msg 617 101 cutoff;
#X obj 226 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 226 76 t b f;
#X obj 305 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 305 76 t b f;
#X obj 389 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 389 76 t b f;
#X obj 478 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 478 76 t b f;
#X obj 617 56 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 617 76 t b f;
#X msg 419 222 state \$1;
#X obj 226 253 list append, f 28;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 25 0;
#X connect 8 0 1 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 15 0 9 0;
#X connect 15 1 24 0;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X connect 17 1 24 0;
#X connect 18 0 19 0;
#X connect 19 0 11 0;
#X connect 19 1 24 0;
#X connect 20 0 21 0;
#X connect 21 0 12 0;
#X connect 21 1 24 0;
#X connect 22 0 23 0;
#X connect 23 0 13 0;
#X connect 23 1 24 0;
#X connect 24 0 25 1;
#X connect 25 0 6 1;
#X restore 125 321 pd Patchbay;
#X msg 97 116 processor <n> effect <<control_message>>;
#X restore 366 108 pd processor;
#X restore 818 159 pd internalAPI;
#N canvas 0 22 450 300 provisório 0;
#X obj 53 116 tcktk_save;
#X msg 53 160 label \$1;
#X obj 253 116 tcktk_save;
#X msg 253 160 label \$1;
#X msg 253 73 Set\ PLAY;
#X msg 53 73 Set\ REC;
#X obj 26 209 s \$0-prepare_rec_receive;
#X obj 226 212 s \$0-set_playback_receive;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 2 0;
#X connect 5 0 0 0;
#X restore 819 215 pd provisório;
#N canvas 627 244 223 141 estruturas 0;
#X obj 10 10 button 86 22 255 255 255 128 128 159;
#X obj 10 37 sel 1;
#X obj 11 11 cnv 15 84 20 empty empty ESTRUTURA 13 10 0 10 -66577 -228856
0;
#X msg 10 61 \; pd-sobre\ estrutura vis 1;
#N canvas 694 153 282 121 sobre\ estrutura 0;
#X obj 10 9 cnv 15 260 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 19 18 note 425 13 helvetica empty 0 22 22 22 0 255 255 255 0
0 Configuração da estrutura de pastas;
#X obj 19 55 declare -path abs;
#X obj 19 76 declare -path data;
#X restore 10 109 pd sobre\ estrutura;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X coords 0 -1 1 1 86 22 2 10 10;
#X restore 816 43 pd estruturas;
#X obj 674 297 note 273 14 dejavu\ sans\ mono empty 0 0 0 0 0 255 255
255 0 0 continuar implementação do metronomo;
#N canvas 589 186 272 131 init 0;
#X obj 24 81 sendOSC drumpad in;
#X text 151 46 reset drumpad;
#X obj 24 17 else/initmess list reset;
#X connect 2 0 0 0;
#X restore 819 240 pd init;
#N canvas 129 188 1063 263 drumpad 0;
#N canvas 765 35 322 196 recorder~ 0;
#X obj 25 12 inlet;
#N canvas 135 -926 1108 720 recorders 0;
#X obj 6 16 inlet;
#X obj 6 531 else/tabwriter~ \$0-pad_0;
#X obj 271 532 else/tabwriter~ \$0-pad_1;
#X obj 536 531 else/tabwriter~ \$0-pad_2;
#X obj 801 531 else/tabwriter~ \$0-pad_3;
#X obj 6 411 else/tabwriter~ \$0-pad_4;
#X obj 271 411 else/tabwriter~ \$0-pad_5;
#X obj 536 411 else/tabwriter~ \$0-pad_6;
#X obj 801 411 else/tabwriter~ \$0-pad_7;
#X obj 6 291 else/tabwriter~ \$0-pad_8;
#X obj 271 291 else/tabwriter~ \$0-pad_9;
#X obj 536 291 else/tabwriter~ \$0-pad_10;
#X obj 801 291 else/tabwriter~ \$0-pad_11;
#X obj 6 181 else/tabwriter~ \$0-pad_12;
#X obj 271 181 else/tabwriter~ \$0-pad_13;
#X obj 536 181 else/tabwriter~ \$0-pad_14;
#X obj 801 181 else/tabwriter~ \$0-pad_15;
#X obj 6 70 t a a a a, f 114;
#X obj 6 581 t a;
#X obj 271 581 t a;
#X obj 536 581 t a;
#X obj 801 582 t a;
#X obj 6 627 t a;
#X obj 6 142 tabwriter_input_message;
#X obj 271 142 tabwriter_input_message;
#X obj 536 142 tabwriter_input_message;
#X obj 801 142 tabwriter_input_message;
#X obj 6 252 tabwriter_input_message;
#X obj 271 252 tabwriter_input_message;
#X obj 536 252 tabwriter_input_message;
#X obj 801 252 tabwriter_input_message;
#X obj 801 372 tabwriter_input_message;
#X obj 536 372 tabwriter_input_message;
#X obj 271 372 tabwriter_input_message;
#X obj 6 372 tabwriter_input_message;
#X obj 6 492 tabwriter_input_message;
#X obj 271 492 tabwriter_input_message;
#X obj 536 492 tabwriter_input_message;
#X obj 801 492 tabwriter_input_message;
#X obj 916 68 catch~ \$0-recorder_in;
#X obj 1004 162 *~ 1;
#X obj 1004 272 *~ 1;
#X obj 1004 392 *~ 1;
#X obj 1004 512 *~ 1;
#X obj 1004 553 else/meter~;
#X obj 6 202 recorder_out 12;
#X obj 271 202 recorder_out 13;
#X obj 536 202 recorder_out 14;
#X obj 801 202 recorder_out 15;
#X obj 536 312 recorder_out 10;
#X obj 801 312 recorder_out 11;
#X obj 271 312 recorder_out 9;
#X obj 6 312 recorder_out 8;
#X obj 6 432 recorder_out 4;
#X obj 271 432 recorder_out 5;
#X obj 536 432 recorder_out 6;
#X obj 801 432 recorder_out 7;
#X obj 18 557 recorder_out 0;
#X obj 271 553 recorder_out 1;
#X obj 536 553 recorder_out 2;
#X obj 801 552 recorder_out 3;
#X obj 6 118 route 12;
#X obj 271 117 route 13;
#X obj 536 119 route 14;
#X obj 801 118 route 15;
#X obj 801 228 route 11;
#X obj 536 228 route 10;
#X obj 271 228 route 9;
#X obj 6 228 route 8;
#X obj 6 348 route 4;
#X obj 271 348 route 5;
#X obj 536 348 route 6;
#X obj 801 348 route 7;
#X obj 801 468 route 3;
#X obj 536 468 route 2;
#X obj 271 469 route 1;
#X obj 6 468 route 0;
#X obj 76 118 route all;
#X obj 76 228 route all;
#X obj 76 348 route all;
#X obj 76 468 route all;
#X obj 336 118 route all;
#X obj 336 228 route all;
#X obj 336 348 route all;
#X obj 336 468 route all;
#X obj 606 118 route all;
#X obj 606 228 route all;
#X obj 606 348 route all;
#X obj 606 468 route all;
#X obj 866 118 route all;
#X obj 866 228 route all;
#X obj 866 348 route all;
#X obj 866 468 route all;
#X obj 6 678 sendOSC recorder;
#X connect 0 0 17 0;
#X connect 1 0 57 0;
#X connect 2 0 58 0;
#X connect 3 0 59 0;
#X connect 4 0 60 0;
#X connect 5 0 53 0;
#X connect 6 0 54 0;
#X connect 7 0 55 0;
#X connect 8 0 56 0;
#X connect 9 0 52 0;
#X connect 10 0 51 0;
#X connect 11 0 49 0;
#X connect 12 0 50 0;
#X connect 13 0 45 0;
#X connect 14 0 46 0;
#X connect 15 0 47 0;
#X connect 16 0 48 0;
#X connect 17 0 61 0;
#X connect 17 0 68 0;
#X connect 17 0 69 0;
#X connect 17 0 76 0;
#X connect 17 1 62 0;
#X connect 17 1 67 0;
#X connect 17 1 70 0;
#X connect 17 1 75 0;
#X connect 17 2 63 0;
#X connect 17 2 66 0;
#X connect 17 2 71 0;
#X connect 17 2 74 0;
#X connect 17 3 64 0;
#X connect 17 3 65 0;
#X connect 17 3 72 0;
#X connect 17 3 73 0;
#X connect 18 0 22 0;
#X connect 19 0 22 0;
#X connect 20 0 22 0;
#X connect 21 0 22 0;
#X connect 22 0 93 0;
#X connect 23 0 13 0;
#X connect 23 1 13 0;
#X connect 24 0 14 0;
#X connect 24 1 14 0;
#X connect 25 0 15 0;
#X connect 26 0 16 0;
#X connect 26 1 16 0;
#X connect 27 0 9 0;
#X connect 27 1 9 0;
#X connect 28 0 10 0;
#X connect 28 1 10 0;
#X connect 29 0 11 0;
#X connect 29 1 11 0;
#X connect 30 0 12 0;
#X connect 30 1 12 0;
#X connect 31 0 8 0;
#X connect 31 1 8 0;
#X connect 32 0 7 0;
#X connect 32 1 7 0;
#X connect 33 0 6 0;
#X connect 33 1 6 0;
#X connect 34 0 5 0;
#X connect 34 1 5 0;
#X connect 35 0 1 0;
#X connect 35 1 1 0;
#X connect 36 0 2 0;
#X connect 36 1 2 0;
#X connect 37 0 3 0;
#X connect 37 1 3 0;
#X connect 38 0 4 0;
#X connect 38 1 4 0;
#X connect 39 0 40 0;
#X connect 40 0 16 1;
#X connect 40 0 15 1;
#X connect 40 0 14 1;
#X connect 40 0 13 1;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 41 0 12 1;
#X connect 41 0 11 1;
#X connect 41 0 10 1;
#X connect 41 0 9 1;
#X connect 42 0 43 0;
#X connect 42 0 8 1;
#X connect 42 0 7 1;
#X connect 42 0 6 1;
#X connect 42 0 5 1;
#X connect 43 0 4 1;
#X connect 43 0 3 1;
#X connect 43 0 2 1;
#X connect 43 0 1 1;
#X connect 43 0 44 0;
#X connect 45 0 18 0;
#X connect 46 0 19 0;
#X connect 47 0 20 0;
#X connect 48 0 21 0;
#X connect 49 0 20 0;
#X connect 50 0 21 0;
#X connect 51 0 19 0;
#X connect 52 0 18 0;
#X connect 53 0 18 0;
#X connect 54 0 19 0;
#X connect 55 0 20 0;
#X connect 56 0 21 0;
#X connect 57 0 18 0;
#X connect 58 0 19 0;
#X connect 59 0 20 0;
#X connect 60 0 21 0;
#X connect 61 0 23 0;
#X connect 61 1 77 0;
#X connect 62 0 24 0;
#X connect 62 1 81 0;
#X connect 63 0 25 0;
#X connect 63 1 85 0;
#X connect 64 0 26 0;
#X connect 64 1 89 0;
#X connect 65 0 30 0;
#X connect 65 1 90 0;
#X connect 66 0 29 0;
#X connect 66 1 86 0;
#X connect 67 0 28 0;
#X connect 67 1 82 0;
#X connect 68 0 27 0;
#X connect 68 1 78 0;
#X connect 69 0 34 0;
#X connect 69 1 79 0;
#X connect 70 0 33 0;
#X connect 70 1 83 0;
#X connect 71 0 32 0;
#X connect 71 1 87 0;
#X connect 72 0 31 0;
#X connect 72 1 91 0;
#X connect 73 0 38 0;
#X connect 73 1 92 0;
#X connect 74 0 37 0;
#X connect 74 1 88 0;
#X connect 75 0 36 0;
#X connect 75 1 84 0;
#X connect 76 0 35 0;
#X connect 76 1 80 0;
#X connect 77 0 23 0;
#X connect 78 0 27 0;
#X connect 79 0 34 0;
#X connect 80 0 35 0;
#X connect 81 0 24 0;
#X connect 82 0 28 0;
#X connect 83 0 33 0;
#X connect 84 0 36 0;
#X connect 85 0 25 0;
#X connect 86 0 29 0;
#X connect 87 0 32 0;
#X connect 88 0 37 0;
#X connect 89 0 26 0;
#X connect 90 0 30 0;
#X connect 91 0 31 0;
#X connect 92 0 38 0;
#X restore 25 144 pd recorders;
#N canvas 837 108 328 316 gate_recording_messages 0;
#X obj 103 100 inlet;
#X obj 123 144 route recorder;
#X obj 123 168 route in;
#X obj 123 253 outlet;
#X msg 26 35 recorder in <pad> <<control_message>>;
#X text 12 11 Messages for [pd recorder~];
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X restore 25 68 pd gate_recording_messages;
#X obj 25 107 recorder_message_processor;
#N canvas 400 128 291 187 notas 0;
#X text 24 105 4 minutos em 16 bancos = 339 Mb;
#X text 108 123 1 minuto = 5 \, 292 Mb;
#X obj 20 65 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 684 430 450 174 calculadora_internet 0;
#X obj 37 37 inlet;
#X msg 37 58 browse https://www.colincrawley.com/audio-file-size-calculator/
;
#X obj 37 90 pdcontrol;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 20 82 pd calculadora_internet;
#X text 24 12 usando 2 minutos = 170Mb;
#X connect 2 0 3 0;
#X restore 253 11 pd notas;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 163 197 pd recorder~;
#N canvas 108 152 221 176 player~ 0;
#X obj 15 8 inlet;
#N canvas 172 -986 1178 712 players 0;
#X obj 29 8 inlet;
#X obj 29 67 t a a a a, f 114;
#X obj 29 607 t a;
#X obj 69 138 else/tabplayer~ \$0-pad_12;
#X obj 334 138 else/tabplayer~ \$0-pad_13;
#X obj 599 138 else/tabplayer~ \$0-pad_14;
#X obj 864 138 else/tabplayer~ \$0-pad_15;
#X obj 66 248 else/tabplayer~ \$0-pad_8;
#X obj 331 248 else/tabplayer~ \$0-pad_9;
#X obj 599 248 else/tabplayer~ \$0-pad_10;
#X obj 864 248 else/tabplayer~ \$0-pad_11;
#X obj 861 368 else/tabplayer~ \$0-pad_7;
#X obj 596 368 else/tabplayer~ \$0-pad_6;
#X obj 331 368 else/tabplayer~ \$0-pad_5;
#X obj 66 368 else/tabplayer~ \$0-pad_4;
#X obj 66 488 else/tabplayer~ \$0-pad_0;
#X obj 331 489 else/tabplayer~ \$0-pad_1;
#X obj 596 488 else/tabplayer~ \$0-pad_2;
#X obj 861 488 else/tabplayer~ \$0-pad_3;
#X obj 29 105 route 12;
#X obj 294 103 route 13;
#X obj 559 105 route 14;
#X obj 824 105 route 15;
#X obj 29 215 route 8;
#X obj 294 215 route 9;
#X obj 559 215 route 10;
#X obj 824 215 route 11;
#X obj 824 335 route 7;
#X obj 824 455 route 3;
#X obj 559 455 route 2;
#X obj 559 335 route 6;
#X obj 294 335 route 5;
#X obj 294 456 route 1;
#X obj 29 455 route 0;
#X obj 29 335 route 4;
#X obj 239 588 t a;
#X obj 504 588 t a;
#X obj 769 589 t a;
#X obj 1034 589 t a;
#X obj 241 184 player_outs 12;
#X obj 506 184 player_outs 13;
#X obj 771 184 player_outs 14;
#X obj 1036 184 player_outs 15;
#X obj 1036 304 player_outs 11;
#X obj 771 304 player_outs 10;
#X obj 496 304 player_outs 9;
#X obj 231 304 player_outs 8;
#X obj 231 414 player_outs 4;
#X obj 496 414 player_outs 5;
#X obj 761 414 player_outs 6;
#X obj 1026 414 player_outs 7;
#X obj 1026 534 player_outs 3;
#X obj 761 534 player_outs 2;
#X obj 496 534 player_outs 1;
#X obj 231 534 player_outs 0;
#X obj 971 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 0 22 534 300 issue_github 0;
#X obj 37 37 inlet;
#X msg 37 61 browse https://github.com/porres/pd-else/issues/792#issuecomment-717681543
;
#X obj 37 113 pdcontrol;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 971 40 pd issue_github;
#X obj 205 17 note 786 18 dejavu\ sans\ mono empty 0 0 0 0 1 255 0
0 1 0 Aguardando correção de bug ELSE Beta32 no output bang do tabplayer~
;
#X obj 29 658 sendOSC player;
#X obj 99 105 route all;
#X obj 99 215 route all;
#X obj 99 335 route all;
#X obj 99 455 route all;
#X obj 364 456 route all;
#X obj 364 335 route all;
#X obj 364 215 route all;
#X obj 364 103 route all;
#X obj 629 105 route all;
#X obj 629 215 route all;
#X obj 629 335 route all;
#X obj 629 455 route all;
#X obj 894 455 route all;
#X obj 894 335 route all;
#X obj 894 215 route all;
#X obj 894 105 route all;
#X obj 69 167 throw~ \$0-player_12;
#X obj 334 159 throw~ \$0-player_13;
#X obj 599 159 throw~ \$0-player_14;
#X obj 864 159 throw~ \$0-player_15;
#X obj 864 269 throw~ \$0-player_11;
#X obj 599 269 throw~ \$0-player_10;
#X obj 331 269 throw~ \$0-player_9;
#X obj 66 269 throw~ \$0-player_8;
#X obj 861 389 throw~ \$0-player_7;
#X obj 596 389 throw~ \$0-player_6;
#X obj 331 389 throw~ \$0-player_5;
#X obj 65 389 throw~ \$0-player_4;
#X obj 861 509 throw~ \$0-player_3;
#X obj 596 510 throw~ \$0-player_2;
#X obj 331 510 throw~ \$0-player_1;
#X obj 66 510 throw~ \$0-player_0;
#X obj 88 562 display;
#X connect 0 0 1 0;
#X connect 1 0 19 0;
#X connect 1 0 23 0;
#X connect 1 0 33 0;
#X connect 1 0 34 0;
#X connect 1 1 20 0;
#X connect 1 1 24 0;
#X connect 1 1 31 0;
#X connect 1 1 32 0;
#X connect 1 2 21 0;
#X connect 1 2 25 0;
#X connect 1 2 29 0;
#X connect 1 2 30 0;
#X connect 1 3 22 0;
#X connect 1 3 26 0;
#X connect 1 3 27 0;
#X connect 1 3 28 0;
#X connect 2 0 58 0;
#X connect 3 0 75 0;
#X connect 3 1 39 0;
#X connect 4 0 76 0;
#X connect 4 1 40 0;
#X connect 5 0 77 0;
#X connect 5 1 41 0;
#X connect 6 0 78 0;
#X connect 6 1 42 0;
#X connect 7 0 82 0;
#X connect 7 1 46 0;
#X connect 8 0 81 0;
#X connect 8 1 45 0;
#X connect 9 0 80 0;
#X connect 9 1 44 0;
#X connect 10 0 79 0;
#X connect 10 1 43 0;
#X connect 11 0 83 0;
#X connect 11 1 50 0;
#X connect 12 0 84 0;
#X connect 12 1 49 0;
#X connect 13 0 85 0;
#X connect 13 1 48 0;
#X connect 14 0 86 0;
#X connect 14 1 47 0;
#X connect 15 0 90 0;
#X connect 15 1 54 0;
#X connect 16 0 89 0;
#X connect 16 1 53 0;
#X connect 17 0 88 0;
#X connect 17 1 52 0;
#X connect 18 0 87 0;
#X connect 18 1 51 0;
#X connect 19 0 3 0;
#X connect 19 1 59 0;
#X connect 20 0 4 0;
#X connect 20 1 66 0;
#X connect 21 0 5 0;
#X connect 21 1 67 0;
#X connect 22 0 6 0;
#X connect 22 1 74 0;
#X connect 23 0 7 0;
#X connect 23 1 60 0;
#X connect 24 0 8 0;
#X connect 24 1 65 0;
#X connect 25 0 9 0;
#X connect 25 1 68 0;
#X connect 26 0 10 0;
#X connect 26 1 73 0;
#X connect 27 0 11 0;
#X connect 27 1 72 0;
#X connect 28 0 18 0;
#X connect 28 1 71 0;
#X connect 29 0 17 0;
#X connect 29 1 70 0;
#X connect 30 0 12 0;
#X connect 30 1 69 0;
#X connect 31 0 13 0;
#X connect 31 1 64 0;
#X connect 32 0 16 0;
#X connect 32 1 63 0;
#X connect 33 0 15 0;
#X connect 33 0 91 0;
#X connect 33 1 62 0;
#X connect 34 0 14 0;
#X connect 34 1 61 0;
#X connect 35 0 2 0;
#X connect 36 0 2 0;
#X connect 37 0 2 0;
#X connect 38 0 2 0;
#X connect 39 0 35 0;
#X connect 40 0 36 0;
#X connect 41 0 37 0;
#X connect 42 0 38 0;
#X connect 43 0 38 0;
#X connect 44 0 37 0;
#X connect 45 0 36 0;
#X connect 46 0 35 0;
#X connect 47 0 35 0;
#X connect 48 0 36 0;
#X connect 49 0 37 0;
#X connect 50 0 38 0;
#X connect 51 0 38 0;
#X connect 52 0 37 0;
#X connect 53 0 36 0;
#X connect 54 0 35 0;
#X connect 55 0 56 0;
#X connect 59 0 3 0;
#X connect 60 0 7 0;
#X connect 61 0 14 0;
#X connect 62 0 15 0;
#X connect 63 0 16 0;
#X connect 64 0 13 0;
#X connect 65 0 8 0;
#X connect 66 0 4 0;
#X connect 67 0 5 0;
#X connect 68 0 9 0;
#X connect 69 0 12 0;
#X connect 70 0 17 0;
#X connect 71 0 18 0;
#X connect 72 0 11 0;
#X connect 73 0 10 0;
#X connect 74 0 6 0;
#X restore 40 131 pd players;
#N canvas 310 197 295 300 gate_player~ 0;
#X obj 93 87 inlet;
#X obj 113 239 outlet;
#X obj 113 141 route player;
#X obj 113 165 route in;
#X msg 16 27 player in <pad> <<control_message>>;
#X text 10 8 Messages to [pd player~];
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 40 48 pd gate_player~;
#N canvas 111 237 794 329 message_processor 0;
#X obj 21 16 inlet;
#X obj 42 289 outlet;
#X obj 42 57 list split 1, f 22;
#X obj 117 86 list trim;
#X obj 42 189 list trim;
#N canvas 105 394 568 344 Control_Messages 0;
#X text 87 111 float;
#X text 76 245 <stop>;
#X text 70 261 <pause>;
#X text 64 277 <resume>;
#X text 120 245 - stops playing and outputs 0 (cannot be resumed),
f 61;
#X text 125 111 - non zero plays the array in original speed \, <0>
stops it, f 61;
#X text 120 277 - resumes playing after being paused, f 61;
#X text 64 293 loop <f>;
#X text 120 293 - non zero enables looping \, <0> disbales it, f 61
;
#X text 120 261 - pauses at a particular point (can be resumed), f
61;
#X msg 9 7 <pad> <<control_message>>;
#X text 31 42 <pad> - integer 0-15;
#X text 29 82 <<control_message>>;
#X text 30 136 start <float>;
#X text 124 136 - sets start point in ms, f 61;
#X text 115 163 -;
#X text 23 163 play <f \, f \, f>;
#X text 127 163 start playing \, if no float is given \, array is played
from start to end. 1st float sets start \, 2nd sets end (in ms) and
3rd sets speed rate;
#X text 29 212 speed <float>;
#X text 115 212 - sets playing speed in percentage, f 61;
#X restore 577 270 pd Control_Messages;
#N canvas 548 335 199 292 stop 0;
#X obj 46 37 inlet;
#X obj 86 204 outlet;
#X msg 86 89 stop;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 204 141 pd stop;
#N canvas 183 430 369 275 start 0;
#X obj 33 31 inlet;
#X obj 100 198 outlet;
#X obj 33 77 route bang;
#X msg 33 116 start;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 117 140 pd start;
#N canvas 666 330 242 275 loop 0;
#X obj 33 31 inlet;
#X obj 90 198 outlet;
#X floatatom 90 99 5 0 0 1 loop - -;
#X obj 33 77 route bang;
#X msg 90 119 loop \$1;
#X connect 0 0 3 0;
#X connect 2 0 4 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X restore 467 141 pd loop;
#X obj 42 168 list append;
#N canvas 570 316 242 275 pause 0;
#X obj 33 31 inlet;
#X obj 90 198 outlet;
#X msg 90 75 pause;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 292 141 pd pause;
#N canvas 633 254 212 269 resume 0;
#X obj 43 26 inlet;
#X obj 73 223 outlet;
#X msg 73 77 resume;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 379 141 pd resume;
#X msg 577 251 <pad> <<control_message>>;
#X obj 117 114 route start stop pause resume loop play speed, f 88
;
#N canvas 671 53 247 300 play 0;
#X obj 31 26 inlet;
#X obj 61 232 outlet;
#X obj 61 83 list prepend play;
#X obj 61 107 list trim;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 554 141 pd play;
#N canvas 671 53 247 300 speed 0;
#X obj 31 26 inlet;
#X obj 61 232 outlet;
#X msg 61 87 speed \$1;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 642 141 pd speed;
#N canvas 0 22 256 166 error 0;
#X obj 30 30 inlet;
#X obj 31 92 print -n;
#X msg 30 70 invalid message to player;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 711 140 pd error;
#X connect 0 0 2 0;
#X connect 2 0 9 0;
#X connect 2 1 3 0;
#X connect 3 0 13 0;
#X connect 4 0 1 0;
#X connect 6 0 9 1;
#X connect 7 0 9 1;
#X connect 8 0 9 1;
#X connect 9 0 4 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 13 0 7 0;
#X connect 13 1 6 0;
#X connect 13 2 10 0;
#X connect 13 3 11 0;
#X connect 13 4 8 0;
#X connect 13 5 14 0;
#X connect 13 6 15 0;
#X connect 13 7 16 0;
#X connect 14 0 9 1;
#X connect 15 0 9 1;
#X restore 40 79 pd message_processor;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 47 197 pd player~;
#N canvas 282 122 314 178 buffer 0;
#N canvas 134 89 1006 662 buffers 0;
#X text 158 449 Buffer pad 0;
#X text 409 449 Buffer pad 1;
#X text 650 449 Buffer pad 2;
#X text 899 449 Buffer pad 3;
#X text 158 339 Buffer pad 4;
#X text 409 340 Buffer pad 5;
#X text 650 339 Buffer pad 6;
#X text 899 339 Buffer pad 7;
#X obj 21 11 inlet;
#X text 158 230 Buffer pad 8;
#X text 409 230 Buffer pad 9;
#X text 650 229 Buffer pad 10;
#X text 899 229 Buffer pad 11;
#X text 156 122 Buffer pad 12;
#X text 407 122 Buffer pad 13;
#X text 648 121 Buffer pad 14;
#X text 897 121 Buffer pad 15;
#X obj 21 140 else/sample~ \$0-pad_12 -ms 12000;
#X obj 21 248 else/sample~ \$0-pad_8 -ms 12000;
#X obj 21 358 else/sample~ \$0-pad_4 -ms 12000;
#X obj 21 468 else/sample~ \$0-pad_0 -ms 12000;
#X obj 267 468 else/sample~ \$0-pad_1 -ms 12000;
#X obj 267 358 else/sample~ \$0-pad_5 -ms 12000;
#X obj 267 248 else/sample~ \$0-pad_9 -ms 12000;
#X obj 267 140 else/sample~ \$0-pad_13 -ms 12000;
#X obj 513 140 else/sample~ \$0-pad_14 -ms 12000;
#X obj 513 248 else/sample~ \$0-pad_10 -ms 12000;
#X obj 513 358 else/sample~ \$0-pad_6 -ms 12000;
#X obj 513 468 else/sample~ \$0-pad_2 -ms 12000;
#X obj 760 468 else/sample~ \$0-pad_3 -ms 12000;
#X obj 760 358 else/sample~ \$0-pad_7 -ms 12000;
#X obj 760 248 else/sample~ \$0-pad_11 -ms 12000;
#X obj 760 140 else/sample~ \$0-pad_15 -ms 12000;
#X obj 21 55 t a a a a, f 106;
#X obj 21 545 t a;
#X obj 21 490 abs/buffer_outs 0;
#X obj 267 490 abs/buffer_outs 1;
#X obj 513 490 abs/buffer_outs 2;
#X obj 760 490 abs/buffer_outs 3;
#X obj 21 380 abs/buffer_outs 4;
#X obj 267 380 abs/buffer_outs 5;
#X obj 513 380 abs/buffer_outs 6;
#X obj 760 380 abs/buffer_outs 7;
#X obj 21 270 abs/buffer_outs 8;
#X obj 267 270 abs/buffer_outs 9;
#X obj 513 270 abs/buffer_outs 10;
#X obj 760 270 abs/buffer_outs 11;
#X obj 21 162 abs/buffer_outs 12;
#X obj 267 162 abs/buffer_outs 13;
#X obj 513 162 abs/buffer_outs 14;
#X obj 760 162 abs/buffer_outs 15;
#X obj 267 545 t a;
#X obj 513 545 t a;
#X obj 760 545 t a;
#X obj 760 625 outlet;
#X obj 21 111 route 12;
#X obj 267 111 route 13;
#X obj 513 111 route 14;
#X obj 760 111 route 15;
#X obj 21 219 route 8;
#X obj 267 219 route 9;
#X obj 513 219 route 10;
#X obj 760 219 route 11;
#X obj 760 329 route 7;
#X obj 513 329 route 6;
#X obj 267 329 route 5;
#X obj 21 329 route 4;
#X obj 21 439 route 0;
#X obj 267 439 route 1;
#X obj 513 439 route 2;
#X obj 760 439 route 3;
#X obj 84 111 route all;
#X obj 84 219 route all;
#X obj 84 329 route all;
#X obj 84 439 route all;
#X obj 334 111 route all;
#X obj 334 219 route all;
#X obj 334 329 route all;
#X obj 334 439 route all;
#X obj 578 111 route all;
#X obj 577 219 route all;
#X obj 574 329 route all;
#X obj 574 439 route all;
#X obj 824 111 route all;
#X obj 824 219 route all;
#X obj 824 329 route all;
#X obj 824 439 route all;
#X obj 166 87 display;
#X connect 8 0 33 0;
#X connect 17 0 47 0;
#X connect 18 0 43 0;
#X connect 19 0 39 0;
#X connect 20 0 35 0;
#X connect 21 0 36 0;
#X connect 22 0 40 0;
#X connect 23 0 44 0;
#X connect 24 0 48 0;
#X connect 25 0 49 0;
#X connect 26 0 45 0;
#X connect 27 0 41 0;
#X connect 28 0 37 0;
#X connect 29 0 38 0;
#X connect 30 0 42 0;
#X connect 31 0 46 0;
#X connect 32 0 50 0;
#X connect 33 0 55 0;
#X connect 33 0 59 0;
#X connect 33 0 66 0;
#X connect 33 0 67 0;
#X connect 33 0 87 0;
#X connect 33 1 56 0;
#X connect 33 1 60 0;
#X connect 33 1 65 0;
#X connect 33 1 68 0;
#X connect 33 2 57 0;
#X connect 33 2 61 0;
#X connect 33 2 64 0;
#X connect 33 2 69 0;
#X connect 33 3 58 0;
#X connect 33 3 62 0;
#X connect 33 3 63 0;
#X connect 33 3 70 0;
#X connect 34 0 54 0;
#X connect 35 0 34 0;
#X connect 36 0 51 0;
#X connect 37 0 52 0;
#X connect 38 0 53 0;
#X connect 39 0 34 0;
#X connect 40 0 51 0;
#X connect 41 0 52 0;
#X connect 42 0 53 0;
#X connect 43 0 34 0;
#X connect 44 0 51 0;
#X connect 45 0 52 0;
#X connect 46 0 53 0;
#X connect 47 0 34 0;
#X connect 48 0 51 0;
#X connect 49 0 52 0;
#X connect 50 0 53 0;
#X connect 51 0 54 0;
#X connect 52 0 54 0;
#X connect 53 0 54 0;
#X connect 55 0 17 0;
#X connect 55 1 71 0;
#X connect 56 0 24 0;
#X connect 56 1 75 0;
#X connect 57 0 25 0;
#X connect 57 1 79 0;
#X connect 58 0 32 0;
#X connect 58 1 83 0;
#X connect 59 0 18 0;
#X connect 59 1 72 0;
#X connect 60 0 23 0;
#X connect 60 1 76 0;
#X connect 61 0 26 0;
#X connect 61 1 80 0;
#X connect 62 0 31 0;
#X connect 62 1 84 0;
#X connect 63 0 30 0;
#X connect 63 1 85 0;
#X connect 64 0 27 0;
#X connect 64 1 81 0;
#X connect 65 0 22 0;
#X connect 65 1 77 0;
#X connect 66 0 19 0;
#X connect 66 1 73 0;
#X connect 67 0 20 0;
#X connect 67 1 74 0;
#X connect 68 0 21 0;
#X connect 68 1 78 0;
#X connect 69 0 28 0;
#X connect 69 1 82 0;
#X connect 70 0 29 0;
#X connect 70 1 86 0;
#X connect 71 0 17 0;
#X connect 72 0 18 0;
#X connect 73 0 19 0;
#X connect 74 0 20 0;
#X connect 75 0 24 0;
#X connect 76 0 23 0;
#X connect 77 0 22 0;
#X connect 78 0 21 0;
#X connect 79 0 25 0;
#X connect 80 0 26 0;
#X connect 81 0 27 0;
#X connect 82 0 28 0;
#X connect 83 0 32 0;
#X connect 84 0 31 0;
#X connect 85 0 30 0;
#X connect 86 0 29 0;
#X restore 55 107 pd buffers;
#N canvas 323 294 685 319 buffer_message_processor 0;
#X obj 22 19 inlet;
#X obj 22 278 outlet;
#X obj 96 86 list trim;
#X obj 22 203 list trim;
#X obj 22 182 list append;
#X obj 22 61 list split 1;
#N canvas 641 52 572 245 Control_Messages 0;
#X text 43 48 <pad> - integer 0-15;
#X msg 12 11 <pad> <<control_message>>;
#X text 42 87 <<control_message>>;
#X text 99 62 all;
#X text 112 108 clear;
#X text 119 125 show;
#X text 119 141 hide;
#X text 158 125 - shows/opens buffer supbatch window, f 53;
#X text 158 141 - hides/closes buffer supbatch window, f 53;
#X text 28 156 normalize <float>;
#X text 158 108 - fills all buffer arrays with zeros, f 53;
#X text 158 157 - normalizes buffer content to the given float value
, f 53;
#X text 77 176 ms <float>;
#X text 63 196 size <float>;
#X text 158 197 - sets maximum buffer size in samples, f 53;
#X text 158 177 - sets maximum buffer size in ms, f 53;
#X restore 467 276 pd Control_Messages;
#X msg 467 257 <pad> <<control_message>>;
#N canvas 486 217 336 259 clear 0;
#X obj 63 21 inlet;
#X obj 63 201 outlet;
#X obj 63 57 route bang;
#X msg 63 119 clear;
#X msg 144 88 invalid clear message;
#X obj 144 112 print ERROR:;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X restore 96 141 pd clear;
#N canvas 548 335 372 292 show 0;
#X obj 63 21 inlet;
#X obj 63 201 outlet;
#X obj 63 57 route bang;
#X obj 144 112 print ERROR:;
#X msg 63 119 show;
#X msg 144 88 invalid show message;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 5 0;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X restore 185 141 pd show;
#N canvas 533 369 358 275 hide 0;
#X obj 63 21 inlet;
#X obj 63 201 outlet;
#X obj 63 57 route bang;
#X obj 144 112 print ERROR:;
#X msg 63 119 hide;
#X msg 144 88 invalid hide message;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 5 0;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X restore 274 141 pd hide;
#N canvas 570 316 303 254 normalize 0;
#X obj 33 31 inlet;
#X obj 177 203 outlet;
#X floatatom 177 104 5 0 0 1 end - -;
#X obj 33 77 route bang, f 21;
#X msg 177 124 normalize \$1;
#X msg 33 101 normalize 0.99;
#X connect 0 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X restore 350 141 pd normalize;
#X obj 96 114 route clear show hide normalize ms size, f 77;
#N canvas 603 319 339 245 ms 0;
#X obj 23 21 inlet;
#X obj 195 201 outlet;
#X obj 23 57 route bang, f 25;
#X obj 23 122 print ERROR:;
#X msg 23 98 invalid ms message;
#X floatatom 195 95 5 0 0 1 milliseconds - -;
#X msg 195 115 ms \$1;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 453 141 pd ms;
#N canvas 603 319 339 245 size 0;
#X obj 23 21 inlet;
#X obj 195 201 outlet;
#X obj 23 57 route bang, f 25;
#X obj 23 122 print ERROR:;
#X floatatom 195 95 5 0 0 1 samples - -;
#X msg 23 98 invalid size message;
#X msg 195 115 size \$1;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 2 1 4 0;
#X connect 4 0 6 0;
#X connect 5 0 3 0;
#X connect 6 0 1 0;
#X restore 542 141 pd size;
#X connect 0 0 5 0;
#X connect 2 0 12 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 5 1 2 0;
#X connect 8 0 4 1;
#X connect 9 0 4 1;
#X connect 10 0 4 1;
#X connect 11 0 4 1;
#X connect 12 0 8 0;
#X connect 12 1 9 0;
#X connect 12 2 10 0;
#X connect 12 3 11 0;
#X connect 12 4 13 0;
#X connect 12 5 14 0;
#X connect 13 0 4 1;
#X connect 14 0 4 1;
#X restore 55 73 pd buffer_message_processor;
#N canvas 837 108 328 316 gate_buffer_messages 0;
#X obj 103 100 inlet;
#X obj 123 168 route in;
#X obj 123 253 outlet;
#X msg 26 35 buffer in <pad> <<control_message>>;
#X text 12 11 Messages for [pd buffer];
#X obj 123 144 route buffer;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 5 0 1 0;
#X restore 55 52 pd gate_buffer_messages;
#X obj 30 20 inlet;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 279 197 pd buffer;
#X obj 27 18 receiveOSC;
#X obj 47 86 route in;
#N canvas 580 50 558 287 pads_hold_time 0;
#X obj 340 16 array d \$0-pads_hold_time 16;
#X obj 232 232 array set \$0-pads_hold_time;
#X obj 60 16 inlet;
#X obj 232 194 unpack f f;
#X msg 60 209 arrayviewlistnew;
#X obj 60 232 s \$0-pads_hold_time;
#X obj 60 73 route pads_hold_time;
#X obj 60 97 route show, f 25;
#X connect 2 0 6 0;
#X connect 3 0 1 0;
#X connect 3 1 1 1;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 7 1 3 0;
#X restore 727 197 pd pads_hold_time;
#N canvas 491 244 450 309 busy_pads 0;
#X obj 50 5 inlet;
#X obj 220 243 array set \$0-busy_pads;
#X obj 269 14 array d \$0-busy_pads 16;
#X obj 50 53 route busy_pads;
#X obj 50 117 route show, f 24;
#X msg 50 220 arrayviewlistnew;
#X obj 50 243 s \$0-busy_pads;
#X obj 220 175 unpack f f;
#X connect 0 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 1 1;
#X restore 627 197 pd busy_pads;
#N canvas 93 85 1042 558 reset 0;
#X obj 48 13 inlet;
#X obj 48 223 del 10;
#X msg 233 464 pad all timer 1;
#X obj 233 442 del 200;
#X obj 48 517 sendOSC drumpad 1 in;
#X msg 140 290 pad all color fg green;
#X msg 48 246 pad all color bg grey;
#X msg 418 357 \; \$1-pads_hold_time const 0;
#X obj 418 334 \$0;
#X obj 326 402 \$0;
#X msg 326 425 \; \$1-busy_pads const 0;
#X obj 48 57 route reset;
#X msg 603 224 all clear;
#X obj 603 250 sendOSC buffer in;
#X text 679 223 clear all pads buffer content;
#X obj 510 270 \$0;
#X text 354 404 reset array busy_pads;
#X text 444 336 reset array pads_hold_time;
#X msg 510 293 \; \$1-pads_recording const 0;
#X text 536 275 reset array pads_recording;
#X obj 696 194 sendOSC processor 1 patchbay 1;
#X msg 696 170 pad all effect clean state 1;
#X obj 696 119 t b b;
#X msg 728 141 reset;
#X obj 48 97 t b b b b b b b b, f 93;
#X text 740 119 reset processor audio signal connections;
#X obj 55 79 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 11 0;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 11 0 24 0;
#X connect 12 0 13 0;
#X connect 15 0 18 0;
#X connect 21 0 20 0;
#X connect 22 0 21 0;
#X connect 22 1 23 0;
#X connect 23 0 20 0;
#X connect 24 0 1 0;
#X connect 24 1 5 0;
#X connect 24 2 3 0;
#X connect 24 3 9 0;
#X connect 24 4 8 0;
#X connect 24 5 15 0;
#X connect 24 6 12 0;
#X connect 24 7 22 0;
#X connect 26 0 24 0;
#X restore 995 197 pd reset;
#N canvas 271 308 254 259 pads_task 0;
#X obj 23 22 inlet;
#X obj 40 136 sel recorder player;
#X obj 40 204 v \$0-pad_task;
#X msg 40 160 1;
#X msg 105 160 2;
#X obj 40 66 route pads_task;
#X obj 40 90 list;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 1 1 4 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 511 197 pd pads_task;
#X obj 47 62 route drumpad;
#N canvas 491 244 450 309 pads_recording 0;
#X obj 40 14 inlet;
#X obj 40 126 route show, f 24;
#X msg 40 229 arrayviewlistnew;
#X obj 210 184 unpack f f;
#X obj 234 17 array d \$0-pads_recording 16;
#X obj 40 62 route pads_recording;
#X obj 210 252 array set \$0-pads_recording;
#X obj 40 252 s \$0-pads_recording;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 7 0;
#X connect 3 0 6 0;
#X connect 3 1 6 1;
#X connect 5 0 1 0;
#X restore 859 197 pd pads_recording;
#X obj 47 146 t a a a a a a a a a, f 133;
#N canvas 184 183 863 346 processor 0;
#N canvas 293 -635 718 451 input_audio_connections 0;
#X obj 45 65 catch~ \$0-player_12;
#X obj 45 147 catch~ \$0-player_8;
#X obj 45 229 catch~ \$0-player_4;
#X obj 45 311 catch~ \$0-player_0;
#X obj 200 65 catch~ \$0-player_13;
#X obj 200 147 catch~ \$0-player_9;
#X obj 200 229 catch~ \$0-player_5;
#X obj 200 311 catch~ \$0-player_1;
#X obj 364 65 catch~ \$0-player_14;
#X obj 364 147 catch~ \$0-player_10;
#X obj 364 229 catch~ \$0-player_6;
#X obj 364 311 catch~ \$0-player_2;
#X obj 519 65 catch~ \$0-player_15;
#X obj 519 147 catch~ \$0-player_11;
#X obj 519 229 catch~ \$0-player_7;
#X obj 519 311 catch~ \$0-player_3;
#X obj 45 107 throw~ \$0-pad_12;
#X obj 45 190 throw~ \$0-pad_8;
#X obj 45 271 throw~ \$0-pad_4;
#X obj 45 354 throw~ \$0-pad_0;
#X text 20 17 Audio connections of pad players audio output and processor
unit, f 66;
#X obj 200 354 throw~ \$0-pad_1;
#X obj 364 354 throw~ \$0-pad_2;
#X obj 519 354 throw~ \$0-pad_3;
#X obj 200 271 throw~ \$0-pad_5;
#X obj 364 271 throw~ \$0-pad_6;
#X obj 519 271 throw~ \$0-pad_7;
#X obj 200 190 throw~ \$0-pad_9;
#X obj 364 190 throw~ \$0-pad_10;
#X obj 519 190 throw~ \$0-pad_11;
#X obj 200 107 throw~ \$0-pad_13;
#X obj 364 107 throw~ \$0-pad_14;
#X obj 519 107 throw~ \$0-pad_15;
#X obj 12 410 outlet;
#X obj 45 86 *~ 0.6;
#X obj 200 86 *~ 0.6;
#X obj 364 86 *~ 0.6;
#X obj 519 86 *~ 0.6;
#X obj 519 169 *~ 0.6;
#X obj 364 169 *~ 0.6;
#X obj 200 169 *~ 0.6;
#X obj 45 169 *~ 0.6;
#X obj 45 250 *~ 0.6;
#X obj 200 250 *~ 0.6;
#X obj 364 250 *~ 0.6;
#X obj 519 250 *~ 0.6;
#X obj 519 333 *~ 0.6;
#X obj 364 333 *~ 0.6;
#X obj 200 333 *~ 0.6;
#X obj 45 333 *~ 0.6;
#X connect 0 0 34 0;
#X connect 1 0 41 0;
#X connect 2 0 42 0;
#X connect 3 0 49 0;
#X connect 4 0 35 0;
#X connect 5 0 40 0;
#X connect 6 0 43 0;
#X connect 7 0 48 0;
#X connect 8 0 36 0;
#X connect 9 0 39 0;
#X connect 10 0 44 0;
#X connect 11 0 47 0;
#X connect 12 0 37 0;
#X connect 13 0 38 0;
#X connect 14 0 45 0;
#X connect 15 0 46 0;
#X connect 34 0 16 0;
#X connect 35 0 30 0;
#X connect 36 0 31 0;
#X connect 37 0 32 0;
#X connect 38 0 29 0;
#X connect 39 0 28 0;
#X connect 40 0 27 0;
#X connect 41 0 17 0;
#X connect 42 0 18 0;
#X connect 43 0 24 0;
#X connect 44 0 25 0;
#X connect 45 0 26 0;
#X connect 46 0 23 0;
#X connect 47 0 22 0;
#X connect 48 0 21 0;
#X connect 49 0 19 0;
#X restore 44 51 pd input_audio_connections;
#N canvas 289 273 439 300 cutoff_filter_effect 0;
#X obj 56 119 cutoff~;
#X obj 40 33 catch~ cutoff~_in;
#X obj 40 253 throw~ cutoff~_out;
#N canvas 275 96 321 363 cutoff_input_messages 0;
#X obj 50 286 outlet;
#X obj 33 18 receiveOSC;
#X obj 131 286 outlet;
#X text 135 181 dry/wet;
#X obj 50 66 route processor;
#X obj 50 90 route 1;
#X obj 50 114 route effect;
#X obj 50 162 unpack f f f;
#X obj 50 237 pack;
#X obj 131 199 else/rescale 0 100 -1 1;
#X text 20 219 freq;
#X text 80 220 res;
#X obj 50 138 route cutoff;
#X connect 1 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 7 2 9 0;
#X connect 8 0 0 0;
#X connect 9 0 2 0;
#X connect 12 0 7 0;
#X restore 102 97 pd cutoff_input_messages;
#X obj 40 171 else/xfade~, f 29;
#X obj 240 134 else/float2sig~ 1;
#N canvas 661 439 507 186 cutoff_messages 0;
#X text 102 65 <n> -;
#X text 142 65 float \, processor id;
#X text 60 125 <dry-wet> -;
#X text 142 125 dry/wet signal rate (0-100);
#X text 142 138 (default 100);
#X text 46 85 <frequency> -;
#X text 46 105 <resonance> -;
#X text 142 85 cut off frequency in hertz;
#X text 142 105 tremolo depth (from 0 to 15);
#X msg 35 21 processor <n> effect cutoff <frequency> <resonance> <dry-wet>
, f 62;
#X restore 289 14 pd cutoff_messages;
#X connect 0 0 4 1;
#X connect 1 0 0 0;
#X connect 1 0 4 0;
#X connect 3 0 0 1;
#X connect 3 1 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 2;
#X restore 677 194 pd cutoff_filter_effect;
#N canvas 289 189 392 322 tremolo_effect 0;
#X obj 17 39 catch~ tremolo~_in;
#X obj 17 279 throw~ tremolo~_out;
#N canvas 758 402 362 365 tremolo_input_messages 0;
#X obj 63 289 outlet;
#X obj 27 18 receiveOSC;
#X obj 144 289 outlet;
#X text 148 187 dry/wet;
#X obj 63 72 route processor;
#X obj 63 96 route 1;
#X obj 63 120 route effect;
#X obj 63 168 unpack f f f;
#X obj 63 243 pack;
#X text 33 227 rate;
#X text 94 227 depth;
#X obj 144 205 else/rescale 0 100 -1 1;
#X obj 63 144 route tremolo;
#X connect 1 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 7 2 11 0;
#X connect 8 0 0 0;
#X connect 11 0 2 0;
#X connect 12 0 7 0;
#X restore 96 111 pd tremolo_input_messages;
#X obj 52 164 else/tremolo~;
#X obj 96 133 unpack;
#X obj 17 208 else/xfade~, f 29;
#X obj 217 171 else/float2sig~ 1;
#N canvas 454 177 450 186 tremolo_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X text 112 105 tremolo depth (from 0 to 1);
#X msg 35 21 processor <n> effect tremolo <rate> <depth> <dry-wet>
;
#X restore 239 12 pd tremolo_messages;
#X connect 0 0 3 0;
#X connect 0 0 5 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 3 0 5 1;
#X connect 4 0 3 1;
#X connect 4 1 3 2;
#X connect 5 0 1 0;
#X connect 6 0 5 2;
#X restore 677 143 pd tremolo_effect;
#N canvas 643 115 398 374 vibrato_effect 0;
#X obj 23 41 catch~ vibrato~_in;
#X obj 23 321 throw~ vibrato~_out;
#N canvas 102 119 332 315 vibrato_input_messages 0;
#X obj 63 276 outlet;
#X obj 43 18 receiveOSC;
#X obj 144 276 outlet;
#X text 148 187 dry/wet;
#X obj 63 72 route processor;
#X obj 63 96 route 1;
#X obj 63 120 route effect;
#X obj 63 144 route vibrato;
#X obj 63 168 unpack f f f;
#X obj 63 243 pack;
#X text 33 225 rate;
#X text 90 226 depth;
#X obj 144 205 else/rescale 0 100 -1 1;
#X obj 88 205 * 100;
#X connect 1 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 13 0;
#X connect 8 2 12 0;
#X connect 9 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 9 1;
#X restore 167 124 pd vibrato_input_messages;
#X obj 123 169 else/vibrato~;
#X obj 23 237 else/xfade~, f 29;
#X obj 223 200 else/float2sig~ 1;
#X obj 167 145 unpack;
#N canvas 454 177 450 186 vibrato_messages 0;
#X text 72 65 <n> -;
#X text 52 85 <rate> -;
#X text 112 65 float \, processor id;
#X text 112 85 frequency in hertz;
#X text 45 105 <depth> -;
#X text 31 125 <dry-wet> -;
#X text 112 125 dry/wet signal rate (0-100);
#X text 112 138 (default 100);
#X text 112 105 interval in semitons (default 0);
#X msg 35 21 processor <n> effect vibrato <rate> <depth> <dry-wet>
;
#X restore 244 12 pd vibrato_messages;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 2 0 6 0;
#X connect 2 1 5 0;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 4 2;
#X connect 6 0 3 1;
#X connect 6 1 3 2;
#X restore 677 116 pd vibrato_effect;
#N canvas 337 165 445 310 pitch_shift_effect 0;
#X obj 52 144 else/pitch.shift~;
#X obj 17 254 throw~ pitch.shift~_out;
#X obj 17 38 catch~ pitch.shift~_in;
#X obj 17 195 else/xfade~, f 29;
#X obj 217 158 else/float2sig~ 1;
#N canvas 399 231 417 394 pitch-shift_input_messages 0;
#X obj 120 336 outlet;
#X obj 33 18 receiveOSC;
#X obj 320 336 outlet;
#X obj 210 336 outlet;
#X text 301 300 dry/wet;
#X obj 53 62 route processor;
#X obj 53 86 route 1;
#X obj 53 110 route effect;
#X obj 217 210 else/rescale 0 100 -1 1;
#X obj 53 134 route pitch-shift;
#X obj 120 183 unpack f f, f 14;
#X text 188 300 window size;
#X text 28 299 transposition;
#X obj 53 158 route size;
#X obj 120 210 * 100;
#X connect 1 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 2 0;
#X connect 9 0 13 0;
#X connect 10 0 14 0;
#X connect 10 1 8 0;
#X connect 13 0 3 0;
#X connect 13 1 10 0;
#X connect 14 0 0 0;
#X restore 110 101 pd pitch-shift_input_messages;
#N canvas 438 370 569 195 pitch-shift_messages 0;
#X text 136 84 <n> -;
#X text 176 84 float \, processor id;
#X text 94 124 <dry-wet> -;
#X text 175 124 dry/wet signal rate (0-100);
#X text 52 104 <transposition> -;
#X text 73 144 <grain-size> -;
#X text 176 143 grain size in ms (default 75 \, minimum 5), f 44;
#X text 176 104 transposition in semitons (default 0), f 44;
#X msg 35 21 processor <n> effect pitch-shift <transposition> <dry-wet>
;
#X msg 35 45 processor <n> effect pitch-shift size <grain-size>;
#X restore 261 14 pd pitch-shift_messages;
#X connect 0 0 3 1;
#X connect 2 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 3 2;
#X connect 5 0 0 1;
#X connect 5 1 0 2;
#X connect 5 2 4 0;
#X restore 677 169 pd pitch_shift_effect;
#N canvas 36 434 257 256 LFO 0;
#X obj 63 206 s \$0-LFO;
#X obj 63 87 else/LFO 0.25 -sine;
#N canvas 590 234 331 286 LFO_input_messages 0;
#X obj 57 240 outlet;
#X obj 37 32 receiveOSC;
#X obj 57 77 route processor;
#X obj 57 101 route 1;
#X obj 57 125 route LFO;
#N canvas 455 453 450 300 message_processor 0;
#X obj 32 21 inlet;
#X obj 32 256 outlet;
#X msg 92 105 sine;
#X msg 152 105 tri;
#X msg 212 105 saw;
#X obj 32 75 route float sine tri saw vsaw square, f 52;
#N canvas 210 193 201 237 vsaw 0;
#X obj 25 18 inlet;
#X obj 25 193 outlet;
#X obj 25 57 route float;
#X msg 25 109 vsaw \$1;
#X msg 99 109 vsaw 1;
#X obj 99 86 route bang;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 5 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X restore 272 103 pd vsaw;
#N canvas 360 360 240 287 square 0;
#X obj 35 28 inlet;
#X obj 35 238 outlet;
#X obj 35 77 route float;
#X obj 109 106 route bang;
#X msg 35 129 square \$1;
#X msg 109 129 square 0.5;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X restore 332 103 pd square;
#X connect 0 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 2 0;
#X connect 5 2 3 0;
#X connect 5 3 4 0;
#X connect 5 4 6 0;
#X connect 5 5 7 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X restore 57 149 pd message_processor;
#N canvas 406 299 568 227 LFO_messages 0;
#X text 70 42 float;
#X text 111 42 - frequency in hertz up to 100 (negative values accepted)
;
#X text 52 59 anything;
#X text 111 59 -;
#X text 123 59 sets waveform (sine \, tri \, saw \, vsaw and square)
;
#X text 113 96 - sets waveform to sine (default), f 60;
#X text 113 112 - sets waveform to triangular, f 60;
#X text 113 128 - sets waveform to sawtooth, f 60;
#X text 7 10 INPUT MESSAGES;
#X text 70 96 sine;
#X text 76 112 tri;
#X text 76 128 saw;
#X text 10 144 square <float>;
#X text 22 160 vsaw <float>;
#X text 113 160 - sets waveform to variable sawtooth and width (from
-1 to 1), f 61;
#X text 126 176 (default 1), f 61;
#X text 113 144 - sets waveform to square and width (from 0 to 1) (default
0.5), f 63;
#X msg 127 7 processor <n> LFO <<control_message>>;
#X restore 210 11 pd LFO_messages;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X restore 33 29 pd LFO_input_messages;
#X obj 63 113 else/rescale -1 1;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X restore 678 81 pd LFO;
#N canvas 237 100 790 441 patchbay 0;
#X text 208 113 p0;
#X text 236 113 p1;
#X text 266 113 p2;
#X text 295 113 p3;
#X text 323 113 p4;
#X text 351 113 p5;
#X text 382 113 p6;
#X text 411 113 p7;
#X text 439 113 p8;
#X text 467 113 p9;
#X text 495 113 p10;
#X text 525 113 p11;
#X text 554 113 p12;
#X text 584 113 p13;
#X text 611 113 p14;
#X text 641 113 p15;
#X text 405 75 PADS;
#X text 21 196 EFEITOS;
#X text 145 168 vibrato;
#X text 145 198 tremolo;
#X text 117 226 pitch shift;
#X text 103 257 cutoff filter;
#X text 415 87 |;
#X text 91 146 |;
#X text 91 158 |;
#X text 91 170 |;
#X text 91 182 |;
#X text 91 206 |;
#X text 91 218 |;
#X text 91 230 |;
#X text 91 242 |;
#X text 91 254 |;
#X text 77 194 --|;
#N canvas 348 229 843 522 cables 0;
#X obj 55 339 inlet;
#X obj 106 386 else/mtx~ 16 5 30, f 78;
#X obj 540 296 catch~ \$0-pad_12;
#X obj 395 208 catch~ \$0-pad_8;
#X obj 250 120 catch~ \$0-pad_4;
#X obj 106 32 catch~ \$0-pad_0;
#X obj 142 54 catch~ \$0-pad_1;
#X obj 178 76 catch~ \$0-pad_2;
#X obj 214 98 catch~ \$0-pad_3;
#X obj 287 142 catch~ \$0-pad_5;
#X obj 323 164 catch~ \$0-pad_6;
#X obj 359 186 catch~ \$0-pad_7;
#X obj 431 230 catch~ \$0-pad_9;
#X obj 468 252 catch~ \$0-pad_10;
#X obj 504 274 catch~ \$0-pad_11;
#X obj 576 318 catch~ \$0-pad_13;
#X obj 612 340 catch~ \$0-pad_14;
#X obj 649 362 catch~ \$0-pad_15;
#X obj 662 430 throw~ cutoff~_in;
#X obj 220 429 throw~ vibrato~_in;
#X obj 356 429 throw~ tremolo~_in;
#X obj 499 430 throw~ pitch.shift~_in;
#X obj 106 430 throw~ \$0-clean;
#X connect 0 0 1 0;
#X connect 1 0 22 0;
#X connect 1 1 19 0;
#X connect 1 2 20 0;
#X connect 1 3 21 0;
#X connect 1 4 18 0;
#X connect 2 0 1 12;
#X connect 3 0 1 8;
#X connect 4 0 1 4;
#X connect 5 0 1 0;
#X connect 6 0 1 1;
#X connect 7 0 1 2;
#X connect 8 0 1 3;
#X connect 9 0 1 5;
#X connect 10 0 1 6;
#X connect 11 0 1 7;
#X connect 12 0 1 9;
#X connect 13 0 1 10;
#X connect 14 0 1 11;
#X connect 15 0 1 13;
#X connect 16 0 1 14;
#X connect 17 0 1 15;
#X restore 103 368 pd cables;
#X text 218 88 ______________________________________________________________
, f 63;
#X text 159 140 clean;
#X text 91 266 |;
#X text 91 134 |;
#X obj 67 9 inlet;
#X obj 73 392 outlet;
#N canvas 309 416 435 356 patchbay_input_messages 0;
#X obj 53 305 outlet;
#N canvas 1109 -505 540 275 patchbay_messages 0;
#X msg 21 15 processor 1 patchbay 1 pad <n> effect <<effect_name>>
state <0-1>, f 65;
#X text 113 63 <n> -;
#X text 29 83 <<effect_name>> -;
#X text 153 83 clean \, vibrato \, tremolo \, pitch_shift or cutoff
;
#X text 57 103 state <0-1> -;
#X text 153 103 if effect assignaled will be activated or deactivated
, f 41;
#X text 153 63 pad number or all;
#X msg 21 175 processor 1 patchbay 1 reset;
#X text 69 202 reset message disconnect all.;
#X restore 263 10 pd patchbay_messages;
#X obj 33 19 receiveOSC;
#X obj 53 63 route processor;
#X obj 53 87 route 1;
#X obj 53 135 route 1;
#X obj 53 111 route patchbay;
#X obj 53 176 route pad;
#X obj 223 176 route reset;
#N canvas 486 276 450 300 reset 0;
#X obj 15 21 inlet;
#X obj 17 244 outlet;
#X msg 355 88 clear;
#X msg 185 88 flush;
#X obj 15 60 t b b b, f 49;
#X connect 0 0 4 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 1 3 0;
#X connect 4 2 2 0;
#X restore 223 209 pd reset;
#N canvas 319 127 806 479 message_processor 0;
#X obj 16 21 inlet;
#X obj 75 434 outlet;
#X obj 16 70 list split 1, f 25;
#X obj 16 148 route all;
#X obj 104 117 route effect;
#X obj 104 139 route clean vibrato tremolo pitch_shift cutoff, f 94
;
#X msg 104 217 0;
#X msg 235 217 1;
#X msg 366 217 2;
#X msg 497 217 3;
#X msg 628 217 4;
#X obj 104 163 t b a;
#X obj 135 184 route state;
#X obj 104 248 pack f f;
#X obj 235 163 t b a;
#X obj 266 184 route state;
#X obj 235 248 pack f f;
#X obj 366 163 t b a;
#X obj 397 184 route state;
#X obj 366 248 pack f f;
#X obj 497 163 t b a;
#X obj 528 184 route state;
#X obj 497 248 pack f f;
#X obj 628 163 t b a;
#X obj 659 184 route state;
#X obj 628 248 pack f f;
#X obj 104 272 t a a;
#X obj 235 272 t a a;
#X obj 366 272 t a a;
#X obj 497 272 t a a;
#X obj 628 272 t a a;
#N canvas 150 112 322 406 pad_all_messages 0;
#X obj 43 29 inlet;
#X obj 43 347 outlet;
#X obj 232 30 inlet;
#X obj 43 189 until, f 7;
#X obj 43 221 else/count 0 15;
#X msg 81 130 reset;
#X msg 43 94 16;
#X obj 61 164 t a b;
#X obj 43 250 list append, f 21;
#X connect 0 0 6 0;
#X connect 2 0 8 1;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 3 0;
#X connect 7 0 4 0;
#X connect 7 1 3 1;
#X connect 8 0 1 0;
#X restore 75 381 pd pad_all_messages;
#X obj 16 321 list append, f 13;
#X obj 16 204 route float;
#X obj 16 94 list trim;
#X obj 104 94 list trim;
#X connect 0 0 2 0;
#X connect 2 0 34 0;
#X connect 2 1 35 0;
#X connect 3 0 31 0;
#X connect 3 1 33 0;
#X connect 4 0 5 0;
#X connect 5 0 11 0;
#X connect 5 1 14 0;
#X connect 5 2 17 0;
#X connect 5 3 20 0;
#X connect 5 4 23 0;
#X connect 6 0 13 0;
#X connect 7 0 16 0;
#X connect 8 0 19 0;
#X connect 9 0 22 0;
#X connect 10 0 25 0;
#X connect 11 0 6 0;
#X connect 11 1 12 0;
#X connect 12 0 13 1;
#X connect 13 0 26 0;
#X connect 14 0 7 0;
#X connect 14 1 15 0;
#X connect 15 0 16 1;
#X connect 16 0 27 0;
#X connect 17 0 8 0;
#X connect 17 1 18 0;
#X connect 18 0 19 1;
#X connect 19 0 28 0;
#X connect 20 0 9 0;
#X connect 20 1 21 0;
#X connect 21 0 22 1;
#X connect 22 0 29 0;
#X connect 23 0 10 0;
#X connect 23 1 24 0;
#X connect 24 0 25 1;
#X connect 25 0 30 0;
#X connect 26 0 32 1;
#X connect 26 1 31 1;
#X connect 27 0 32 1;
#X connect 27 1 31 1;
#X connect 28 0 32 1;
#X connect 28 1 31 1;
#X connect 29 0 32 1;
#X connect 29 1 31 1;
#X connect 30 0 32 1;
#X connect 30 1 31 1;
#X connect 31 0 1 0;
#X connect 32 0 1 0;
#X connect 33 0 32 0;
#X connect 34 0 3 0;
#X connect 35 0 4 0;
#X restore 53 209 pd message_processor;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 10 0;
#X connect 7 1 8 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X restore 97 34 pd patchbay_input_messages;
#X msg 354 38 columns \$1;
#X msg 444 38 rows \$1;
#X msg 514 38 size \$1;
#X text 601 13 [else/mtx.ctl 16 5 29];
#X obj 201 133 else/mtx.ctl 16 5 29 0 0 0 0 0 0 0 0 0 0 0 0;
#X connect 40 0 45 0;
#X connect 45 0 33 0;
#X coords 0 -1 1 1 600 180 1 100 110;
#X restore 44 81 pd patchbay;
#N canvas 477 285 391 260 output_audio_connections 0;
#X obj 56 207 throw~ \$0-processor;
#X obj 98 67 catch~ vibrato~_out;
#X obj 129 94 catch~ tremolo~_out;
#X obj 154 122 catch~ pitch.shift~_out;
#X obj 212 147 catch~ cutoff~_out;
#X obj 56 38 catch~ \$0-clean;
#X obj 11 11 inlet;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X restore 44 277 pd output_audio_connections;
#X obj 7 4 inlet;
#X connect 0 0 6 0;
#X connect 6 0 7 0;
#X restore 395 197 pd processor;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 9 0 4 0;
#X connect 11 0 1 0;
#X connect 11 1 0 0;
#X connect 11 2 2 0;
#X connect 11 3 12 0;
#X connect 11 4 8 0;
#X connect 11 5 6 0;
#X connect 11 6 5 0;
#X connect 11 7 10 0;
#X connect 11 8 7 0;
#X restore 818 183 pd drumpad;
#N canvas 777 96 367 300 ToDo_fila 0;
#X text 24 39 - testar processador;
#X text 24 60 - conectar LFO aos processamentos;
#X text 24 19 - trabalhar no processador parametrizado;
#X text 44 137 - mensagens de entrada e saída;
#X text 24 120 - DOCUMENTAR tempo.pd;
#X text 44 157 - fazer um help para ele;
#X restore 799 433 pd ToDo_fila;
#X obj 318 63 tgl 45 0 \$0_loopToggle_send \$0_loopToggle_receive LOOP
3 21 0 16 -262130 -260097 -260097 0 1;
#N canvas 0 22 1179 578 anotaçõesReunião 0;
#X obj 344 444 else/keyboard 17 80 1 3 0 0 empty empty;
#X text 132 67 Sampler;
#X text 202 67 ---->;
#X text 351 117 ---->;
#X text 262 67 Drumpad;
#X text 249 101 Processador;
#X text 407 117 Saída;
#X text 282 84 |;
#X text 128 214 LFO - transformação em Wavetable (esperando exemplo)
;
#X text 41 239 Processador:;
#X text 155 83 |;
#X text 122 100 sample based;
#X text 122 113 sample midi;
#X text 128 274 LFO - cutoff;
#X text 225 275 Síntese Subtrativa (filtros) (saída geral);
#X text 128 253 LFO - tremolo;
#X text 128 234 LFO - vibrato - pitchshift;
#X text 244 116 parametrizado;
#X text 173 32 DIAGRAMA DO INSTRUMENTO;
#X text 126 348 pitshift dos sampleados;
#X text 298 338 ----> via botão que liga/desl pitshift por bpm;
#X text 298 360 ----> pitshift controlado via knob;
#X text 49 436 Synths timbres;
#X text 156 419 ----> Julia escolher timbres;
#X text 156 439 ----> timbres melódicos;
#X text 156 460 ----> timbres ritmicos;
#X text 729 54 Sampler;
#X text 651 56 gravar-->;
#X obj 761 102 else/keyboard 17 80 1 3 0 0 empty empty;
#X text 794 42 --->;
#X text 830 35 reproduz pad sampleado com pitshift temperado, f 23
;
#X text 794 66 ---> saida para processador;
#X text 527 243 - filtro de cutoff (passa baixa);
#X text 541 257 (na saída geral);
#X text 122 125 arpeggiator;
#X restore 607 18 pd anotaçõesReunião;
#X obj 267 189 catch~ \$0-processor;
#N canvas 413 326 450 300 bugs 1;
#X text 34 49 - drumpad precisa clicar 2x pra parar play;
#X text 15 20 BUGS CONHECIDOS:;
#X restore 651 266 pd bugs;
#X obj 126 259 vu 20 80 empty empty -1 -8 0 10 -1 -1 0 0;
#X obj 158 262 r \$0-peak;
#X obj 125 237 r \$0-rms;
#X text 156 301 <= [vu];
#N canvas 0 22 450 300 vu_meter 0;
#X obj 92 47 inlet~;
#X obj 86 138 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -999 256;
#X obj 185 137 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -999 256;
#X text 59 137 RMS;
#X text 153 136 Peak;
#X obj 86 160 s \$0-rms;
#X obj 185 158 s \$0-peak;
#X obj 86 113 else/vu~ 1024 128;
#X connect 0 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X restore 150 285 pd vu_meter;
#N canvas 591 305 299 145 rjdj_opções 0;
#X text 30 25 EFEITOS;
#N canvas 697 246 450 294 rjdj-efeitos 0;
#X obj 31 50 e_agc;
#X obj 31 74 e_dynproc;
#X obj 301 53 e_dubdel;
#X obj 300 80 e_graindelread;
#X text 290 16 na manga;
#X text 26 18 pretendo_usar/usados;
#X obj 302 110 e_lop2;
#X obj 302 136 e_lop4;
#X obj 302 159 e_noclickdel;
#X obj 304 187 e_pan;
#X obj 306 215 e_stereowidener;
#X obj 305 242 e_phaser;
#X obj 31 98 e_pitchshift;
#X obj 31 123 e_platereverb;
#X obj 32 148 e_reverb;
#X obj 31 174 e_scompress;
#X restore 93 25 pd rjdj-efeitos;
#X text 30 79 SYNTHS:;
#N canvas 696 255 530 300 rjdj-synths 0;
#X text 81 28 - grungy and grainy console and cheap synth sounds;
#X obj 24 28 s_chip;
#X text 81 60 - synth with 4 harmonic oscillator modulating a waveshaper
and FM stage;
#X obj 25 63 s_cwc;
#X text 134 101 - electronic drums;
#X obj 24 101 s_drumelectro;
#X text 85 136 - juno like instrument;
#X obj 25 136 s_ejun;
#X text 86 169 - string synthesiser;
#X obj 26 169 s_hstr;
#X text 96 202 - FM emulation of rhodes e-piano;
#X obj 26 202 s_rhodey;
#X text 86 232 - slow synth pads;
#X obj 26 232 s_spad;
#X text 76 262 - type B waveshaper;
#X obj 26 262 s_wsb;
#X restore 92 78 pd rjdj-synths;
#X restore 817 94 pd rjdj_opções;
#N canvas 325 196 721 485 else_opções 0;
#N canvas 84 121 752 328 pvoc.player~ 0;
#X msg 99 81 pause;
#X msg 154 80 continue;
#X obj 257 167 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X msg 232 107 loop \$1;
#X obj 232 83 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 196 108 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 340 218 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 361 216 <= finished;
#X msg 140 58 open vacuous.wav;
#X obj 175 108 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 84 181 click: opens a new file =>, f 13;
#X msg 36 58 open stereo.wav;
#X obj 232 131 else/pack2 range f f;
#X floatatom 290 93 5 0 0 0 - - -;
#X obj 293 69 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 349 111 5 0 0 0 - - -;
#X obj 352 90 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 333 69 minimum;
#X text 393 90 maximum;
#X obj 175 190 else/pvoc.player~ stereo.wav;
#X text 113 15 Test the main message methods of [pvoc.player~].;
#X obj 340 167 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 223 166 speed;
#X text 389 165 transposition;
#X obj 171 222 else/out~;
#X obj 400 274 else/canvas.active;
#X obj 400 298 switch~;
#X text 430 40 Na terceira vez que tocar vacuous vai dar um endbang
e reiniciar a reprodução, f 39;
#X connect 0 0 19 0;
#X connect 1 0 19 0;
#X connect 2 0 19 1;
#X connect 3 0 19 0;
#X connect 4 0 3 0;
#X connect 5 0 19 0;
#X connect 8 0 19 0;
#X connect 9 0 19 0;
#X connect 11 0 19 0;
#X connect 12 0 19 0;
#X connect 13 0 12 1;
#X connect 14 0 13 0;
#X connect 15 0 12 2;
#X connect 16 0 15 0;
#X connect 19 0 24 0;
#X connect 19 2 6 0;
#X connect 21 0 19 2;
#X connect 25 0 26 0;
#X restore 29 81 pd pvoc.player~;
#N canvas 607 122 608 348 gran.player~ 0;
#X msg 110 86 pause;
#X msg 165 85 continue;
#X obj 268 172 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X msg 243 112 loop \$1;
#X obj 243 88 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 207 113 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 351 223 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 372 221 <= finished;
#X msg 151 63 open vacuous.wav;
#X obj 186 113 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 95 186 click: opens a new file =>, f 13;
#X msg 47 63 open stereo.wav;
#X obj 243 136 else/pack2 range f f;
#X floatatom 301 98 5 0 0 0 - - -;
#X obj 304 74 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 360 116 5 0 0 0 - - -;
#X obj 363 95 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 344 74 minimum;
#X text 404 95 maximum;
#X obj 351 172 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 234 171 speed;
#X text 400 170 transposition;
#X obj 186 195 else/gran.player~ stereo.wav;
#X text 124 20 Test the main message methods of [gran.player~].;
#X obj 184 228 else/out~;
#X obj 472 292 else/canvas.active;
#X obj 472 316 switch~;
#X connect 0 0 22 0;
#X connect 1 0 22 0;
#X connect 2 0 22 1;
#X connect 3 0 22 0;
#X connect 4 0 3 0;
#X connect 5 0 22 0;
#X connect 8 0 22 0;
#X connect 9 0 22 0;
#X connect 11 0 22 0;
#X connect 12 0 22 0;
#X connect 13 0 12 1;
#X connect 14 0 13 0;
#X connect 15 0 12 2;
#X connect 16 0 15 0;
#X connect 19 0 22 2;
#X connect 22 0 24 0;
#X connect 22 2 6 0;
#X connect 25 0 26 0;
#X restore 29 100 pd gran.player~;
#N canvas 714 152 450 300 tabplayer~ 0;
#X obj 149 44 tgl 25 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#N canvas 576 100 351 116 load 0;
#X obj 32 52 soundfiler;
#X obj 241 55 table \$0-violin;
#X obj 32 76 outlet;
#X obj 32 20 else/initmess read -resize violin.wav \$0-violin;
#X connect 0 0 2 0;
#X connect 3 0 0 0;
#X restore 18 200 pd load \; sample;
#X msg 190 68 stop;
#X msg 188 44 start;
#X msg 90 62 loop \$1;
#X obj 90 40 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0 1
;
#X obj 296 118 bng 25 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 286 147 finished;
#X text 289 159 playing;
#X text 228 45 (same as non zero);
#X text 223 68 (same as zero);
#X obj 18 263 send \$0-array_size;
#X obj 18 239 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 290646 256;
#X obj 149 128 else/out~;
#X obj 149 93 else/tabplayer~ \$0-violin;
#X obj 304 239 else/canvas.active;
#X obj 304 263 switch~;
#X connect 0 0 14 0;
#X connect 1 0 12 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 4 0 14 0;
#X connect 5 0 4 0;
#X connect 12 0 11 0;
#X connect 14 0 13 0;
#X connect 14 1 6 0;
#X connect 15 0 16 0;
#X restore 30 53 pd tabplayer~;
#X text 132 54 <-- usando este;
#X obj 516 74 else/bpm;
#X obj 516 262 else/autofade~;
#X obj 516 292 else/autofade2~;
#X obj 516 343 else/sequencer~;
#X obj 516 319 else/sequencer;
#X obj 515 100 else/tempo;
#X obj 515 126 else/tempo~;
#X obj 516 237 env~;
#X obj 516 178 else/quantizer;
#X obj 515 153 else/quantizer~;
#X obj 516 365 else/mov.rms~ 4096 -db;
#X text 511 23 Ferramentas para criar Sampler quantizado, f 23;
#X text 28 21 Players de sample;
#X obj 517 438 else/xselect2~;
#X obj 517 414 else/mtx~;
#X restore 817 72 pd else_opções;
#X obj 439 96 cnv 15 360 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 528 343 524 188 entrada_de_gravação 0;
#X obj 155 28 inlet~;
#X obj 264 27 inlet;
#X obj 53 27 adc~;
#X text 213 142 [pd gravador~] --> [pd recorders];
#X text 208 127 entrada em:;
#X obj 53 132 throw~ \$0-recorder_in;
#X text 88 26 mic;
#X obj 53 105 xselect~ 2 50 1;
#X obj 264 51 + 1;
#X obj 53 56 e_agc;
#X connect 0 0 7 1;
#X connect 1 0 8 0;
#X connect 2 0 9 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X restore 447 162 pd entrada_de_gravação;
#X f 24;
#X obj 612 107 vradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X text 631 105 entrada de microfone;
#X text 632 122 sintetizador;
#X text 451 137 <--entrada para synth;
#X obj 447 112 synth_julia;
#X text 632 137 último pad reproduzindo;
#X text 692 387 - fades para cada loop;
#X text 692 337 - quantizações BPM;
#X text 692 417 - Sampler;
#X text 692 362 - comando de loop individual;
#X obj 99 18 tempo;
#N canvas 0 22 450 300 liga 0;
#X obj 28 29 tgl 15 0 empty empty liga_KRK 17 7 0 10 -262144 -1 -1
0 1;
#X obj 28 103 line~;
#X obj 88 119 osc~ 10;
#X obj 28 188 dac~;
#X obj 28 147 *~;
#X obj 28 79 pack f 60;
#X connect 0 0 5 0;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 4 0 3 0;
#X connect 4 0 3 1;
#X connect 5 0 1 0;
#X coords 0 -1 1 1 85 40 2 20 20;
#X restore 659 42 pd liga caixas;
#X connect 8 0 4 0;
#X connect 24 0 4 0;
#X connect 24 0 30 0;
#X connect 27 0 26 1;
#X connect 28 0 26 0;
#X connect 35 0 34 1;
#X connect 39 0 34 0;
#X coords 0 474 1 473 85 60 0;
